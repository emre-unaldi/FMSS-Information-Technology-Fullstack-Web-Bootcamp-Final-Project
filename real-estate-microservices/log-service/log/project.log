2024-07-21T00:03:14.125+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:08:14.485+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:08:44.941+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Required part 'photos' is not present., timestamp=2024-07-21T00:08:44.907908100, exception=400 BAD_REQUEST - MissingServletRequestPartException)
2024-07-21T00:10:22.332+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:10:22.325821700, exception=null)
2024-07-21T00:10:22.338+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:10:22.327000100, exception=null)
2024-07-21T00:12:17.705+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:12:17.699443400, exception=null)
2024-07-21T00:12:17.709+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:12:17.700781, exception=null)
2024-07-21T00:12:42.596+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:12:42.587991500, exception=null)
2024-07-21T00:12:42.601+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:12:42.589988100, exception=null)
2024-07-21T00:13:14.488+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:13:35.124+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:13:35.119216600, exception=null)
2024-07-21T00:13:35.134+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:13:35.125718700, exception=null)
2024-07-21T00:13:35.140+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:13:35.136347800, exception=null)
2024-07-21T00:13:35.143+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:13:35.136890900, exception=null)
2024-07-21T00:14:00.237+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-21T00:14:00.232583600, exception=null)
2024-07-21T00:15:49.051+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:15:49.046404500, exception=null)
2024-07-21T00:15:49.056+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:15:49.053758300, exception=null)
2024-07-21T00:15:49.066+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:15:49.063046, exception=null)
2024-07-21T00:15:49.069+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:15:49.063592800, exception=null)
2024-07-21T00:18:14.489+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:23:14.502+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:28:14.511+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:29:59.560+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:29:59.499903700, exception=null)
2024-07-21T00:29:59.613+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:29:59.512908200, exception=null)
2024-07-21T00:29:59.615+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:29:59.525004600, exception=null)
2024-07-21T00:29:59.619+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:29:59.525538600, exception=null)
2024-07-21T00:30:20.565+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:30:20.560108600, exception=null)
2024-07-21T00:30:20.572+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:30:20.569250, exception=null)
2024-07-21T00:30:20.575+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:30:20.570400900, exception=null)
2024-07-21T00:32:13.712+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:32:13.679848100, exception=null)
2024-07-21T00:32:13.717+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:32:13.709459900, exception=null)
2024-07-21T00:33:05.439+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Photo name already exists : java.png, timestamp=2024-07-21T00:33:05.433748, exception=409 CONFLICT - PhotoAlreadyExistsException)
2024-07-21T00:33:14.517+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:34:11.243+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:34:11.238634100, exception=null)
2024-07-21T00:34:11.248+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:34:11.239651100, exception=null)
2024-07-21T00:34:21.266+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:34:21.261176100, exception=null)
2024-07-21T00:34:21.272+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:34:21.269456, exception=null)
2024-07-21T00:34:21.279+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:34:21.270009200, exception=null)
2024-07-21T00:38:14.531+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:39:00.335+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:39:00.331983400, exception=null)
2024-07-21T00:39:00.340+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:39:00.338617500, exception=null)
2024-07-21T00:39:00.344+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:39:00.339223400, exception=null)
2024-07-21T00:43:14.544+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:45:31.495+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:45:31.490819900, exception=null)
2024-07-21T00:45:31.500+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:45:31.492719700, exception=null)
2024-07-21T00:46:24.479+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:46:24.475467600, exception=null)
2024-07-21T00:46:24.482+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:46:24.475467600, exception=null)
2024-07-21T00:48:14.562+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:53:14.568+03:00  INFO 23136 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T00:56:59.597+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:56:59.567089, exception=null)
2024-07-21T00:56:59.659+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T00:56:59.584665, exception=null)
2024-07-21T00:56:59.662+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T00:56:59.585501, exception=null)
2024-07-21T00:58:01.181+03:00  INFO 23136 --- [log-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application LOG-SERVICE with eureka with status DOWN
2024-07-21T00:58:01.182+03:00  INFO 23136 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721512681182, current=DOWN, previous=UP]
2024-07-21T00:58:01.184+03:00  INFO 23136 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T00:58:01.447+03:00  INFO 23136 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T00:58:01.464+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-07-21T00:58:02.208+03:00  INFO 23136 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-07-21T00:58:02.973+03:00  INFO 23136 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-21T00:58:05.981+03:00  INFO 23136 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-21T00:58:06.019+03:00  INFO 23136 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-21T00:58:06.020+03:00  WARN 23136 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T00:58:06.068+03:00  INFO 23136 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-21T00:58:06.069+03:00  WARN 23136 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T00:58:06.069+03:00 ERROR 23136 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T00:58:06.091+03:00  INFO 23136 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-21T02:39:50.621+03:00  INFO 28788 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Starting LogServiceApplication using Java 22.0.1 with PID 28788 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\log-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-21T02:39:50.634+03:00  INFO 28788 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : No active profile set, falling back to 1 default profile: "default"
2024-07-21T02:39:50.727+03:00  INFO 28788 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-21T02:39:50.727+03:00  INFO 28788 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-21T02:39:53.643+03:00  INFO 28788 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-07-21T02:39:53.891+03:00  INFO 28788 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 242 ms. Found 1 MongoDB repository interface.
2024-07-21T02:39:54.321+03:00  INFO 28788 --- [log-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c0a16ca3-5cf2-36c3-8012-8480c6f53b66
2024-07-21T02:39:54.499+03:00  WARN 28788 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-21T02:39:54.504+03:00  WARN 28788 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-21T02:39:55.193+03:00  INFO 28788 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8085 (http)
2024-07-21T02:39:55.214+03:00  INFO 28788 --- [log-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-21T02:39:55.214+03:00  INFO 28788 --- [log-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-21T02:39:55.335+03:00  INFO 28788 --- [log-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-21T02:39:55.336+03:00  INFO 28788 --- [log-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4608 ms
2024-07-21T02:39:56.051+03:00  INFO 28788 --- [log-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@643d64f3], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@239d5ac4, com.mongodb.Jep395RecordCodecProvider@f88bdfd, com.mongodb.KotlinCodecProvider@24cc8917]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@2bd96b81], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-07-21T02:39:56.066+03:00  INFO 28788 --- [log-service] [cluster-ClusterId{value='669c4acb86eedf5174b03bda', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31867600}
2024-07-21T02:39:56.316+03:00  WARN 28788 --- [log-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-21T02:39:58.218+03:00  INFO 28788 --- [log-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-21T02:39:58.310+03:00  WARN 28788 --- [log-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-21T02:39:58.326+03:00  INFO 28788 --- [log-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-21T02:39:58.553+03:00  INFO 28788 --- [log-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-21T02:39:58.621+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-21T02:39:58.634+03:00  INFO 28788 --- [log-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T02:39:58.710+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T02:39:58.711+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T02:39:58.711+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T02:39:58.712+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T02:39:58.712+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T02:39:58.712+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-21T02:39:58.712+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T02:39:59.388+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T02:39:59.392+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-21T02:39:59.396+03:00  INFO 28788 --- [log-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-21T02:39:59.404+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721518799403 with initial instances count: 1
2024-07-21T02:39:59.407+03:00  INFO 28788 --- [log-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application LOG-SERVICE with eureka with status UP
2024-07-21T02:39:59.408+03:00  INFO 28788 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721518799408, current=UP, previous=STARTING]
2024-07-21T02:39:59.410+03:00  INFO 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T02:39:59.444+03:00  INFO 28788 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8085 (http) with context path '/'
2024-07-21T02:39:59.446+03:00  INFO 28788 --- [log-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8085
2024-07-21T02:39:59.476+03:00  INFO 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T02:39:59.493+03:00  INFO 28788 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-21T02:39:59.568+03:00  INFO 28788 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#3bc22fd4:0/SimpleConnection@30df8356 [delegate=amqp://admin@127.0.0.1:5672/, localPort=53721]
2024-07-21T02:39:59.680+03:00  INFO 28788 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Started LogServiceApplication in 9.931 seconds (process running for 13.357)
2024-07-21T02:40:00.249+03:00  INFO 28788 --- [log-service] [RMI TCP Connection(1)-192.168.1.178] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-21T02:40:00.250+03:00  INFO 28788 --- [log-service] [RMI TCP Connection(1)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-21T02:40:00.254+03:00  INFO 28788 --- [log-service] [RMI TCP Connection(1)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-07-21T02:44:58.724+03:00  INFO 28788 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T02:49:58.747+03:00  INFO 28788 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T02:54:58.751+03:00  INFO 28788 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T02:59:58.762+03:00  INFO 28788 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:01:52.820+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Bad credentials, timestamp=2024-07-21T03:01:52.778075200, exception=400 BAD_REQUEST - BadCredentialsException)
2024-07-21T03:02:23.780+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=POST, logType=INFO, message=User registered successfully, timestamp=2024-07-21T03:02:23.758326900, exception=null)
2024-07-21T03:02:33.854+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T03:02:33.851178900, exception=null)
2024-07-21T03:04:58.771+03:00  INFO 28788 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:05:50.580+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T03:05:50.575313700, exception=null)
2024-07-21T03:06:09.958+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T03:06:09.955020300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T03:07:51.834+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T03:07:51.827949200, exception=null)
2024-07-21T03:07:58.730+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T03:07:58.726319300, exception=null)
2024-07-21T03:08:03.400+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T03:08:03.397202500, exception=null)
2024-07-21T03:08:12.635+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T03:08:12.632315700, exception=null)
2024-07-21T03:08:16.958+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T03:08:16.955088300, exception=null)
2024-07-21T03:08:19.111+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T03:08:19.108631400, exception=null)
2024-07-21T03:08:21.739+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T03:08:21.736821500, exception=null)
2024-07-21T03:08:23.686+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T03:08:23.684101900, exception=null)
2024-07-21T03:08:29.595+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T03:08:29.592166300, exception=null)
2024-07-21T03:08:53.623+03:00  INFO 28788 --- [log-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application LOG-SERVICE with eureka with status DOWN
2024-07-21T03:08:53.625+03:00  INFO 28788 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721520533625, current=DOWN, previous=UP]
2024-07-21T03:08:53.626+03:00  INFO 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T03:08:53.716+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-07-21T03:08:53.718+03:00  INFO 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2024-07-21T03:08:53.719+03:00  WARN 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T03:08:53.750+03:00  INFO 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-07-21T03:08:53.783+03:00  WARN 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T03:08:53.784+03:00  WARN 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T03:08:53.800+03:00  WARN 28788 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T03:08:53.805+03:00  INFO 28788 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-07-21T03:08:54.047+03:00  INFO 28788 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-21T03:08:57.111+03:00  INFO 28788 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-21T03:08:57.137+03:00  INFO 28788 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-21T03:08:57.195+03:00  WARN 28788 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T03:08:57.195+03:00 ERROR 28788 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T03:08:57.217+03:00  INFO 28788 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-21T03:20:07.806+03:00  INFO 588 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Starting LogServiceApplication using Java 22.0.1 with PID 588 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\log-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-21T03:20:07.809+03:00  INFO 588 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : No active profile set, falling back to 1 default profile: "default"
2024-07-21T03:20:07.891+03:00  INFO 588 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-21T03:20:07.891+03:00  INFO 588 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-21T03:20:09.871+03:00  INFO 588 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-07-21T03:20:10.054+03:00  INFO 588 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 177 ms. Found 1 MongoDB repository interface.
2024-07-21T03:20:10.394+03:00  INFO 588 --- [log-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c0a16ca3-5cf2-36c3-8012-8480c6f53b66
2024-07-21T03:20:10.523+03:00  WARN 588 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-21T03:20:10.526+03:00  WARN 588 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-21T03:20:11.082+03:00  INFO 588 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8085 (http)
2024-07-21T03:20:11.097+03:00  INFO 588 --- [log-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-21T03:20:11.098+03:00  INFO 588 --- [log-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-21T03:20:11.213+03:00  INFO 588 --- [log-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-21T03:20:11.214+03:00  INFO 588 --- [log-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3320 ms
2024-07-21T03:20:11.792+03:00  INFO 588 --- [log-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@eba3277], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@62dcf31e, com.mongodb.Jep395RecordCodecProvider@78062d92, com.mongodb.KotlinCodecProvider@2f8ca061]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@70fa166d], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-07-21T03:20:11.807+03:00  INFO 588 --- [log-service] [cluster-ClusterId{value='669c543b26094e5bf4777f12', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31691500}
2024-07-21T03:20:12.024+03:00  WARN 588 --- [log-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-21T03:20:13.656+03:00  INFO 588 --- [log-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-21T03:20:13.727+03:00  WARN 588 --- [log-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-21T03:20:13.737+03:00  INFO 588 --- [log-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-21T03:20:13.866+03:00  INFO 588 --- [log-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-21T03:20:13.922+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-21T03:20:13.929+03:00  INFO 588 --- [log-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:20:13.956+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T03:20:13.957+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T03:20:13.957+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T03:20:13.957+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T03:20:13.957+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T03:20:13.957+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-21T03:20:13.957+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T03:20:14.360+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T03:20:14.363+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-21T03:20:14.366+03:00  INFO 588 --- [log-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-21T03:20:14.370+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721521214370 with initial instances count: 2
2024-07-21T03:20:14.373+03:00  INFO 588 --- [log-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application LOG-SERVICE with eureka with status UP
2024-07-21T03:20:14.374+03:00  INFO 588 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721521214374, current=UP, previous=STARTING]
2024-07-21T03:20:14.375+03:00  INFO 588 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T03:20:14.403+03:00  INFO 588 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8085 (http) with context path '/'
2024-07-21T03:20:14.404+03:00  INFO 588 --- [log-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8085
2024-07-21T03:20:14.426+03:00  INFO 588 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T03:20:14.437+03:00  INFO 588 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-21T03:20:14.489+03:00  INFO 588 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#6538d3e1:0/SimpleConnection@579ba52f [delegate=amqp://admin@127.0.0.1:5672/, localPort=54384]
2024-07-21T03:20:14.550+03:00  INFO 588 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Started LogServiceApplication in 7.555 seconds (process running for 9.109)
2024-07-21T03:20:15.095+03:00  INFO 588 --- [log-service] [RMI TCP Connection(3)-192.168.1.178] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-21T03:20:15.095+03:00  INFO 588 --- [log-service] [RMI TCP Connection(3)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-21T03:20:15.098+03:00  INFO 588 --- [log-service] [RMI TCP Connection(3)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-07-21T03:25:13.967+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:30:13.970+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:35:13.975+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:40:14.012+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:45:14.024+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:50:14.035+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T03:55:14.051+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:00:14.055+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:05:14.060+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:10:14.077+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:15:14.117+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:20:14.133+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:25:14.142+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:30:14.156+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:35:14.167+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:40:14.170+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:45:14.186+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:50:14.199+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T04:55:14.213+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:00:14.226+03:00  INFO 588 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:02:49.148+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:02:48.453452200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:02:52.568+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:02:52.564940900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:02:56.713+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:02:56.687794, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:02:58.607+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:02:58.602773400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:01.138+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:01.131485600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:02.938+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:02.933663200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:22.435+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:22.429618200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:26.265+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:26.262283300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:27.281+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:27.246680800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:27.671+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:27.668013400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:27.953+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:27.949808800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:28.158+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:28.153338400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:28.834+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:28.830705500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:29.452+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:29.448891400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:30.039+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:30.035261100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:31.443+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:31.438659, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:32.534+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:32.528995900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:33.527+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:33.523448900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:34.435+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:34.430149700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:03:35.080+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:03:35.077690800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:04:09.875+03:00  INFO 588 --- [log-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application LOG-SERVICE with eureka with status DOWN
2024-07-21T05:04:09.876+03:00  INFO 588 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721527449876, current=DOWN, previous=UP]
2024-07-21T05:04:09.882+03:00  INFO 588 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T05:04:10.022+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-07-21T05:04:10.031+03:00  INFO 588 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T05:04:10.314+03:00  INFO 588 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-07-21T05:04:10.727+03:00  INFO 588 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-21T05:04:13.752+03:00  INFO 588 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-21T05:04:14.287+03:00  INFO 588 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-21T05:04:14.287+03:00  WARN 588 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T05:04:15.020+03:00  INFO 588 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-21T05:04:15.945+03:00  WARN 588 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T05:04:15.945+03:00 ERROR 588 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T05:04:16.171+03:00  INFO 588 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-21T05:04:52.148+03:00  INFO 24012 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Starting LogServiceApplication using Java 22.0.1 with PID 24012 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\log-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-21T05:04:52.155+03:00  INFO 24012 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : No active profile set, falling back to 1 default profile: "default"
2024-07-21T05:04:52.244+03:00  INFO 24012 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-21T05:04:52.245+03:00  INFO 24012 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-21T05:04:54.784+03:00  INFO 24012 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-07-21T05:04:55.213+03:00  INFO 24012 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 415 ms. Found 1 MongoDB repository interface.
2024-07-21T05:04:55.694+03:00  INFO 24012 --- [log-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c0a16ca3-5cf2-36c3-8012-8480c6f53b66
2024-07-21T05:04:55.843+03:00  WARN 24012 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-21T05:04:55.846+03:00  WARN 24012 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-21T05:04:56.490+03:00  INFO 24012 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8085 (http)
2024-07-21T05:04:56.510+03:00  INFO 24012 --- [log-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-21T05:04:56.511+03:00  INFO 24012 --- [log-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-21T05:04:56.627+03:00  INFO 24012 --- [log-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-21T05:04:56.627+03:00  INFO 24012 --- [log-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4380 ms
2024-07-21T05:04:57.399+03:00  INFO 24012 --- [log-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@61f942d1], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@643d64f3, com.mongodb.Jep395RecordCodecProvider@239d5ac4, com.mongodb.KotlinCodecProvider@f88bdfd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@24cc8917], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-07-21T05:04:57.426+03:00  INFO 24012 --- [log-service] [cluster-ClusterId{value='669c6cc9c0f8527504dbbca9', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47011000}
2024-07-21T05:04:57.840+03:00  WARN 24012 --- [log-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-21T05:05:00.595+03:00  INFO 24012 --- [log-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-21T05:05:00.729+03:00  WARN 24012 --- [log-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-21T05:05:00.754+03:00  INFO 24012 --- [log-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-21T05:05:01.049+03:00  INFO 24012 --- [log-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-21T05:05:01.213+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-21T05:05:01.223+03:00  INFO 24012 --- [log-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:05:01.266+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T05:05:01.267+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T05:05:01.267+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T05:05:01.268+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T05:05:01.269+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T05:05:01.269+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-21T05:05:01.269+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T05:05:01.921+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T05:05:01.925+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-21T05:05:01.931+03:00  INFO 24012 --- [log-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-21T05:05:01.938+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721527501937 with initial instances count: 2
2024-07-21T05:05:01.941+03:00  INFO 24012 --- [log-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application LOG-SERVICE with eureka with status UP
2024-07-21T05:05:01.942+03:00  INFO 24012 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721527501942, current=UP, previous=STARTING]
2024-07-21T05:05:01.945+03:00  INFO 24012 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T05:05:01.982+03:00  INFO 24012 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8085 (http) with context path '/'
2024-07-21T05:05:01.990+03:00  INFO 24012 --- [log-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8085
2024-07-21T05:05:02.012+03:00  INFO 24012 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-21T05:05:02.034+03:00  INFO 24012 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T05:05:02.091+03:00  INFO 24012 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#612f6ca7:0/SimpleConnection@11c932f [delegate=amqp://admin@127.0.0.1:5672/, localPort=56844]
2024-07-21T05:05:02.193+03:00  INFO 24012 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Started LogServiceApplication in 10.881 seconds (process running for 12.836)
2024-07-21T05:05:02.363+03:00  INFO 24012 --- [log-service] [RMI TCP Connection(2)-192.168.1.178] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-21T05:05:02.363+03:00  INFO 24012 --- [log-service] [RMI TCP Connection(2)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-21T05:05:02.366+03:00  INFO 24012 --- [log-service] [RMI TCP Connection(2)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-07-21T05:05:21.536+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T05:05:21.494685800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T05:06:32.221+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=POST, logType=INFO, message=User registered successfully, timestamp=2024-07-21T05:06:32.193435900, exception=null)
2024-07-21T05:06:35.417+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T05:06:35.413577900, exception=null)
2024-07-21T05:06:49.980+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T05:06:49.963322100, exception=null)
2024-07-21T05:06:49.991+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T05:06:49.986604300, exception=null)
2024-07-21T05:06:49.995+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T05:06:49.987621200, exception=null)
2024-07-21T05:10:01.289+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:15:01.301+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:20:01.392+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:22:24.839+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T05:22:24.817563800, exception=null)
2024-07-21T05:22:24.859+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T05:22:24.825248, exception=null)
2024-07-21T05:22:24.863+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T05:22:24.836131500, exception=null)
2024-07-21T05:22:24.866+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T05:22:24.836776900, exception=null)
2024-07-21T05:25:01.398+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:30:01.400+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:35:01.410+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:40:01.425+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:45:01.441+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:50:01.454+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T05:55:01.456+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:00:01.465+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:05:01.480+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:07:09.462+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:09.396205100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:10.938+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:10.905275200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:11.639+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:11.635028200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:12.012+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:12.006589700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:12.292+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:12.288097, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:12.585+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:12.552789300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:12.790+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:12.786015, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:12.993+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:12.990102700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:24.803+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:24.798119500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:07:25.567+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:07:25.562119700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:05.553+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:05.549854700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:06.337+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:06.332213300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:06.782+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:06.760663100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:06.984+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:06.980869500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:07.165+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:07.162335500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:07.333+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:07.327263700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:07.505+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:07.503013200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:07.667+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:07.664362400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:07.868+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:07.865611800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:08.063+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:08.058789600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:08.257+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:08.254756800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:08.434+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:08.428797200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:08.637+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:08.634411200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:08.822+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:08.820197300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:09.011+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:09.006520600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:11.264+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:11.260474700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:11.448+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:11.444285500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:11.718+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:11.668751500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:11.866+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:11.858455800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:12.280+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:12.277230600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:12.450+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:12.446785400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:12.648+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:12.618789100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:12.800+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:12.795736100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:12.954+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:12.950812600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:41.987+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:41.982279500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:42.862+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:42.859101800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:43.068+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:43.065160700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:43.260+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:43.255762700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:43.460+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:43.426193400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:43.598+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:43.595314, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:43.765+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:43.762235400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:43.930+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:43.926749100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:44.144+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:44.110079100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:44.869+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:44.866893600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:45.344+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:45.340814500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:45.686+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:45.683111500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:45.950+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:45.946812200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:46.207+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:46.205271800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:46.490+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:46.488239600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:46.868+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:46.787283600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:09:47.167+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:09:47.163652200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:10:01.492+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:10:47.633+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:10:47.628230900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:10:49.442+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:10:49.439925800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:04.434+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:04.427226100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:05.797+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:05.792895, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:06.144+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:06.141215800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:06.340+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:06.337096800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:06.523+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:06.520191900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:06.730+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:06.726002500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:46.336+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T06:11:46.331655400, exception=null)
2024-07-21T06:11:54.233+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:54.229054800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:54.965+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:54.961161800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:55.191+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:55.186936500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:55.377+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:55.373531500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:55.561+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:55.557997500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:55.745+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:55.742136900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:55.922+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:55.918965900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:56.093+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:56.091032100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:56.276+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:56.274187100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:11:56.450+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:11:56.447068900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:12:14.342+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:12:14.339406500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:03.785+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:03.781288600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:04.570+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:04.513333100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:04.735+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:04.722694800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:04.926+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:04.923139300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:05.096+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:05.082614300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:09.908+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:09.904458300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:10.521+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:10.518637600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:10.933+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:10.929595200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:11.146+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:11.143345800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:11.324+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:11.321273200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:11.489+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:11.486789200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:11.687+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:11.674450400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:11.871+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:11.869334700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:12.090+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:12.087060900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:12.554+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:12.552537100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:12.746+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:12.742777600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:13:12.924+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:13:12.919785300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:14:28.781+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:14:28.774823500, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:14:29.507+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:14:29.503941300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:14:29.695+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:14:29.691400300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:14:29.881+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:14:29.876652100, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:14:30.068+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:14:30.063660600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:15:01.494+03:00  INFO 24012 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:15:17.383+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:15:17.378280800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:15:51.036+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:15:51.033124800, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:16:29.511+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T06:16:29.507925600, exception=null)
2024-07-21T06:16:44.239+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T06:16:44.237280300, exception=null)
2024-07-21T06:16:55.280+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:16:55.276877600, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:19:47.644+03:00  INFO 24012 --- [log-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application LOG-SERVICE with eureka with status DOWN
2024-07-21T06:19:47.646+03:00  INFO 24012 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721531987645, current=DOWN, previous=UP]
2024-07-21T06:19:47.649+03:00  INFO 24012 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T06:19:47.876+03:00  INFO 24012 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T06:19:48.133+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-07-21T06:19:48.660+03:00  INFO 24012 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-07-21T06:19:49.077+03:00  INFO 24012 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-21T06:19:52.094+03:00  INFO 24012 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-21T06:19:52.169+03:00  INFO 24012 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-21T06:19:52.170+03:00  WARN 24012 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T06:19:52.222+03:00  INFO 24012 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-21T06:19:52.222+03:00  WARN 24012 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T06:19:52.222+03:00 ERROR 24012 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T06:19:52.263+03:00  INFO 24012 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-21T06:22:20.365+03:00  INFO 22172 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Starting LogServiceApplication using Java 22.0.1 with PID 22172 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\log-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-21T06:22:20.368+03:00  INFO 22172 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : No active profile set, falling back to 1 default profile: "default"
2024-07-21T06:22:20.448+03:00  INFO 22172 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-21T06:22:20.449+03:00  INFO 22172 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-21T06:22:22.819+03:00  INFO 22172 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-07-21T06:22:23.114+03:00  INFO 22172 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 289 ms. Found 1 MongoDB repository interface.
2024-07-21T06:22:23.489+03:00  INFO 22172 --- [log-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c0a16ca3-5cf2-36c3-8012-8480c6f53b66
2024-07-21T06:22:23.629+03:00  WARN 22172 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-21T06:22:23.632+03:00  WARN 22172 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-21T06:22:24.205+03:00  INFO 22172 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8085 (http)
2024-07-21T06:22:24.222+03:00  INFO 22172 --- [log-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-21T06:22:24.223+03:00  INFO 22172 --- [log-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-21T06:22:24.328+03:00  INFO 22172 --- [log-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-21T06:22:24.329+03:00  INFO 22172 --- [log-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3879 ms
2024-07-21T06:22:24.905+03:00  INFO 22172 --- [log-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@3d8cbfd9], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@da2cfc7, com.mongodb.Jep395RecordCodecProvider@7a7ea07d, com.mongodb.KotlinCodecProvider@44480cd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@5cee85eb], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-07-21T06:22:24.919+03:00  INFO 22172 --- [log-service] [cluster-ClusterId{value='669c7ef0a51876372627f017', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29748400}
2024-07-21T06:22:25.149+03:00  WARN 22172 --- [log-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-21T06:22:26.615+03:00  INFO 22172 --- [log-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-21T06:22:26.668+03:00  WARN 22172 --- [log-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-21T06:22:26.677+03:00  INFO 22172 --- [log-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-21T06:22:26.792+03:00  INFO 22172 --- [log-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-21T06:22:26.843+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-21T06:22:26.849+03:00  INFO 22172 --- [log-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:22:26.876+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T06:22:26.876+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T06:22:26.876+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T06:22:26.876+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T06:22:26.876+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T06:22:26.876+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-21T06:22:26.876+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T06:22:27.218+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T06:22:27.220+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-21T06:22:27.223+03:00  INFO 22172 --- [log-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-21T06:22:27.227+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721532147226 with initial instances count: 0
2024-07-21T06:22:27.229+03:00  INFO 22172 --- [log-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application LOG-SERVICE with eureka with status UP
2024-07-21T06:22:27.229+03:00  INFO 22172 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721532147229, current=UP, previous=STARTING]
2024-07-21T06:22:27.231+03:00  INFO 22172 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T06:22:27.256+03:00  INFO 22172 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8085 (http) with context path '/'
2024-07-21T06:22:27.257+03:00  INFO 22172 --- [log-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8085
2024-07-21T06:22:27.273+03:00  INFO 22172 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-21T06:22:27.286+03:00  INFO 22172 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T06:22:27.324+03:00  INFO 22172 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#170d2465:0/SimpleConnection@4248e51a [delegate=amqp://admin@127.0.0.1:5672/, localPort=58294]
2024-07-21T06:22:27.425+03:00  INFO 22172 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Started LogServiceApplication in 7.881 seconds (process running for 9.368)
2024-07-21T06:22:27.925+03:00  INFO 22172 --- [log-service] [RMI TCP Connection(3)-192.168.1.178] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-21T06:22:27.925+03:00  INFO 22172 --- [log-service] [RMI TCP Connection(3)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-21T06:22:27.927+03:00  INFO 22172 --- [log-service] [RMI TCP Connection(3)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-07-21T06:22:57.231+03:00  INFO 22172 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T06:22:57.231+03:00  INFO 22172 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T06:22:57.232+03:00  INFO 22172 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T06:22:57.232+03:00  INFO 22172 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T06:22:57.232+03:00  INFO 22172 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T06:22:57.232+03:00  INFO 22172 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2024-07-21T06:22:57.232+03:00  INFO 22172 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T06:22:57.274+03:00  INFO 22172 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T06:23:12.228+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:23:12.198354300, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:27:26.899+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:29:45.028+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=POST, logType=INFO, message=User registered successfully, timestamp=2024-07-21T06:29:44.986152200, exception=null)
2024-07-21T06:29:52.051+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T06:29:52.046427100, exception=null)
2024-07-21T06:30:06.744+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:30:06.738215200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:32:26.932+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:37:26.941+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:39:11.405+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:39:11.399479400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:42:23.388+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:42:23.384092900, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:42:26.951+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:43:29.499+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:43:29.495373200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:44:14.564+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:44:14.559559200, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:45:59.220+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T06:45:59.214911400, exception=null)
2024-07-21T06:46:22.361+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T06:46:22.357675400, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T06:46:30.468+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T06:46:30.464135500, exception=null)
2024-07-21T06:47:02.112+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T06:47:02.047708200, exception=null)
2024-07-21T06:47:26.958+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:52:26.962+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T06:52:36.761+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T06:52:36.756992400, exception=null)
2024-07-21T06:52:55.479+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T06:52:55.474849700, exception=null)
2024-07-21T06:55:32.440+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T06:55:32.436264300, exception=null)
2024-07-21T06:57:26.972+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:02:26.993+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:07:26.997+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:12:27.000+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:17:27.017+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:22:27.026+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:27:27.031+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:32:27.037+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:37:27.064+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:42:27.091+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:47:27.106+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:52:27.107+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T07:57:27.123+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T08:02:27.133+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T08:07:27.147+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T08:12:27.152+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T08:17:27.153+03:00  INFO 22172 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T08:22:20.939+03:00  INFO 22172 --- [log-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application LOG-SERVICE with eureka with status DOWN
2024-07-21T08:22:20.945+03:00  INFO 22172 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721539340945, current=DOWN, previous=UP]
2024-07-21T08:22:20.951+03:00  INFO 22172 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T08:22:21.074+03:00  INFO 22172 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T08:22:21.209+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-07-21T08:22:21.440+03:00  INFO 22172 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-07-21T08:22:21.637+03:00  INFO 22172 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-21T08:22:24.656+03:00  INFO 22172 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-21T08:22:24.692+03:00  INFO 22172 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-21T08:22:24.693+03:00  WARN 22172 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T08:22:24.729+03:00  INFO 22172 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-21T08:22:24.730+03:00  WARN 22172 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T08:22:24.730+03:00 ERROR 22172 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T08:22:24.751+03:00  INFO 22172 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-21T15:15:31.270+03:00  INFO 26444 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Starting LogServiceApplication using Java 22.0.1 with PID 26444 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\log-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-21T15:15:31.295+03:00  INFO 26444 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : No active profile set, falling back to 1 default profile: "default"
2024-07-21T15:15:31.400+03:00  INFO 26444 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-21T15:15:31.401+03:00  INFO 26444 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-21T15:15:33.533+03:00  INFO 26444 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-07-21T15:15:33.802+03:00  INFO 26444 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 262 ms. Found 1 MongoDB repository interface.
2024-07-21T15:15:35.123+03:00  INFO 26444 --- [log-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c0a16ca3-5cf2-36c3-8012-8480c6f53b66
2024-07-21T15:15:35.351+03:00  WARN 26444 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-21T15:15:35.354+03:00  WARN 26444 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-21T15:15:36.065+03:00  INFO 26444 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8085 (http)
2024-07-21T15:15:36.081+03:00  INFO 26444 --- [log-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-21T15:15:36.082+03:00  INFO 26444 --- [log-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-21T15:15:36.213+03:00  INFO 26444 --- [log-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-21T15:15:36.214+03:00  INFO 26444 --- [log-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4811 ms
2024-07-21T15:15:36.751+03:00  INFO 26444 --- [log-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@4a562f5d], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6cb38c6a, com.mongodb.Jep395RecordCodecProvider@28bc9c7f, com.mongodb.KotlinCodecProvider@5645f6d6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@2d121784], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-07-21T15:15:36.767+03:00  INFO 26444 --- [log-service] [cluster-ClusterId{value='669cfbe88c5b3c4d5493d413', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34751900}
2024-07-21T15:15:37.048+03:00  WARN 26444 --- [log-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-21T15:15:38.493+03:00  INFO 26444 --- [log-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-21T15:15:38.543+03:00  WARN 26444 --- [log-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-21T15:15:38.553+03:00  INFO 26444 --- [log-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-21T15:15:38.679+03:00  INFO 26444 --- [log-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-21T15:15:38.722+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-21T15:15:38.730+03:00  INFO 26444 --- [log-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:15:38.781+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T15:15:38.782+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T15:15:38.782+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T15:15:38.783+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T15:15:38.783+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T15:15:38.783+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-21T15:15:38.783+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T15:15:39.238+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T15:15:39.241+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-21T15:15:39.243+03:00  INFO 26444 --- [log-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-21T15:15:39.247+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721564139246 with initial instances count: 3
2024-07-21T15:15:39.249+03:00  INFO 26444 --- [log-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application LOG-SERVICE with eureka with status UP
2024-07-21T15:15:39.249+03:00  INFO 26444 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721564139249, current=UP, previous=STARTING]
2024-07-21T15:15:39.251+03:00  INFO 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T15:15:39.271+03:00  INFO 26444 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8085 (http) with context path '/'
2024-07-21T15:15:39.271+03:00  INFO 26444 --- [log-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8085
2024-07-21T15:15:39.289+03:00  INFO 26444 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-21T15:15:39.341+03:00  INFO 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T15:15:39.425+03:00  INFO 26444 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#7d1da40:0/SimpleConnection@ac6fa46 [delegate=amqp://admin@127.0.0.1:5672/, localPort=61144]
2024-07-21T15:15:39.525+03:00  INFO 26444 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Started LogServiceApplication in 9.106 seconds (process running for 10.773)
2024-07-21T15:15:39.951+03:00  INFO 26444 --- [log-service] [RMI TCP Connection(6)-192.168.1.178] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-21T15:15:39.951+03:00  INFO 26444 --- [log-service] [RMI TCP Connection(6)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-21T15:15:39.954+03:00  INFO 26444 --- [log-service] [RMI TCP Connection(6)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-07-21T15:20:38.793+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:25:38.801+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:30:38.812+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:33:03.080+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T15:33:03.035572900, exception=null)
2024-07-21T15:34:05.673+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T15:34:05.669387800, exception=null)
2024-07-21T15:35:38.818+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:40:38.882+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:44:55.052+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=GET, logType=INFO, message=User found successfully, timestamp=2024-07-21T15:44:54.976267200, exception=null)
2024-07-21T15:45:38.897+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:50:38.906+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:55:38.920+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T15:59:09.710+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T15:59:09.481841100, exception=null)
2024-07-21T16:00:19.300+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:00:19.296828400, exception=null)
2024-07-21T16:00:38.930+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:02:29.107+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:02:29.103727500, exception=null)
2024-07-21T16:03:04.246+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:03:04.241769400, exception=null)
2024-07-21T16:05:38.931+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:05:56.555+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:05:56.550521900, exception=null)
2024-07-21T16:08:07.001+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:08:06.997149, exception=null)
2024-07-21T16:08:15.337+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:08:15.310965100, exception=null)
2024-07-21T16:08:15.340+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:08:15.335777500, exception=null)
2024-07-21T16:09:24.962+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:09:24.958154400, exception=null)
2024-07-21T16:09:31.878+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:09:31.875034, exception=null)
2024-07-21T16:09:31.884+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:09:31.875034, exception=null)
2024-07-21T16:10:09.188+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:10:09.181319300, exception=null)
2024-07-21T16:10:17.563+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Photo name already exists : java-3.jpg, timestamp=2024-07-21T16:10:17.559031300, exception=409 CONFLICT - PhotoAlreadyExistsException)
2024-07-21T16:10:26.124+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:10:26.120922, exception=null)
2024-07-21T16:10:26.127+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:10:26.121924100, exception=null)
2024-07-21T16:10:38.945+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:11:44.216+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:11:44.211920, exception=null)
2024-07-21T16:11:50.910+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:11:50.907064100, exception=null)
2024-07-21T16:11:50.915+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:11:50.908649300, exception=null)
2024-07-21T16:14:02.650+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:14:02.645474800, exception=null)
2024-07-21T16:14:11.128+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:14:11.107928500, exception=null)
2024-07-21T16:14:11.132+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:14:11.108929500, exception=null)
2024-07-21T16:15:38.958+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:16:17.745+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:16:17.741257, exception=null)
2024-07-21T16:16:17.752+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:16:17.742917200, exception=null)
2024-07-21T16:16:55.547+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=ERROR, message=Full authentication is required to access this resource, timestamp=2024-07-21T16:16:55.539232700, exception=401 UNAUTHORIZED - InsufficientAuthenticationException)
2024-07-21T16:17:44.169+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:17:44.163254600, exception=null)
2024-07-21T16:17:51.902+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Photo name already exists : manzara.jpg, timestamp=2024-07-21T16:17:51.897159200, exception=409 CONFLICT - PhotoAlreadyExistsException)
2024-07-21T16:18:01.173+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:18:01.163479400, exception=null)
2024-07-21T16:18:01.178+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:18:01.165479400, exception=null)
2024-07-21T16:19:47.244+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:19:47.240572, exception=null)
2024-07-21T16:20:26.661+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:20:26.657371800, exception=null)
2024-07-21T16:20:38.966+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:23:05.665+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:23:05.661752600, exception=null)
2024-07-21T16:23:18.499+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:23:18.496367800, exception=null)
2024-07-21T16:23:18.503+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:23:18.496367800, exception=null)
2024-07-21T16:25:09.727+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T16:25:09.714188900, exception=null)
2024-07-21T16:25:22.031+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T16:25:22.026762300, exception=null)
2024-07-21T16:25:22.035+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T16:25:22.027759, exception=null)
2024-07-21T16:25:38.973+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:30:38.981+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:35:38.999+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:40:39.011+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:45:39.014+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:50:39.017+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T16:55:39.022+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:00:39.037+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:01:37.156+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=GET, logType=INFO, message=User found successfully, timestamp=2024-07-21T17:01:37.132004100, exception=null)
2024-07-21T17:01:48.358+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T17:01:48.347843500, exception=null)
2024-07-21T17:02:02.681+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Photo name already exists : java-2.gif, timestamp=2024-07-21T17:02:02.677998300, exception=409 CONFLICT - PhotoAlreadyExistsException)
2024-07-21T17:02:13.098+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T17:02:13.094732600, exception=null)
2024-07-21T17:02:13.103+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T17:02:13.096368300, exception=null)
2024-07-21T17:05:39.046+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:10:39.119+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:12:46.603+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T17:12:46.596087, exception=null)
2024-07-21T17:15:39.125+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:20:39.130+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:25:39.148+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:30:39.159+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:35:39.172+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:40:39.179+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:45:39.191+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:50:39.203+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:52:53.282+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T17:52:53.254905700, exception=null)
2024-07-21T17:53:01.391+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T17:53:01.381153700, exception=null)
2024-07-21T17:53:01.409+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Photo name already exists : java-2.gif, timestamp=2024-07-21T17:53:01.405815300, exception=409 CONFLICT - PhotoAlreadyExistsException)
2024-07-21T17:53:18.406+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T17:53:18.402729500, exception=null)
2024-07-21T17:53:18.415+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T17:53:18.411850, exception=null)
2024-07-21T17:53:18.419+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T17:53:18.412354700, exception=null)
2024-07-21T17:55:39.214+03:00  INFO 26444 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:56:29.415+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T17:56:29.411782500, exception=null)
2024-07-21T17:56:40.531+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T17:56:40.527426400, exception=null)
2024-07-21T17:56:40.537+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T17:56:40.534342300, exception=null)
2024-07-21T17:56:40.541+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T17:56:40.535172500, exception=null)
2024-07-21T17:57:43.628+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=GET, logType=INFO, message=User found successfully, timestamp=2024-07-21T17:57:43.620312700, exception=null)
2024-07-21T17:57:44.187+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-21T17:57:44.184265500, exception=null)
2024-07-21T17:57:44.360+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=GET, logType=INFO, message=Address found successfully, timestamp=2024-07-21T17:57:44.357636300, exception=null)
2024-07-21T17:57:44.419+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Advert saved successfully, timestamp=2024-07-21T17:57:44.416751400, exception=null)
2024-07-21T17:58:31.383+03:00  INFO 26444 --- [log-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application LOG-SERVICE with eureka with status DOWN
2024-07-21T17:58:31.385+03:00  INFO 26444 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721573911385, current=DOWN, previous=UP]
2024-07-21T17:58:31.402+03:00  INFO 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T17:58:31.609+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-07-21T17:58:31.616+03:00  INFO 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2024-07-21T17:58:31.617+03:00  WARN 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T17:58:31.637+03:00  INFO 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-07-21T17:58:31.637+03:00  WARN 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T17:58:31.638+03:00  WARN 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T17:58:31.668+03:00  WARN 26444 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T17:58:31.832+03:00  INFO 26444 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-07-21T17:58:31.978+03:00  INFO 26444 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-21T17:58:34.985+03:00  INFO 26444 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-21T17:58:35.016+03:00  INFO 26444 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-21T17:58:35.017+03:00  WARN 26444 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T17:58:35.017+03:00 ERROR 26444 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T17:58:35.028+03:00  INFO 26444 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-21T17:59:44.381+03:00  INFO 27236 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Starting LogServiceApplication using Java 22.0.1 with PID 27236 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\log-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-21T17:59:44.385+03:00  INFO 27236 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : No active profile set, falling back to 1 default profile: "default"
2024-07-21T17:59:44.461+03:00  INFO 27236 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-21T17:59:44.461+03:00  INFO 27236 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-21T17:59:46.396+03:00  INFO 27236 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-07-21T17:59:46.572+03:00  INFO 27236 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 171 ms. Found 1 MongoDB repository interface.
2024-07-21T17:59:46.924+03:00  INFO 27236 --- [log-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c0a16ca3-5cf2-36c3-8012-8480c6f53b66
2024-07-21T17:59:47.064+03:00  WARN 27236 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-21T17:59:47.067+03:00  WARN 27236 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-21T17:59:47.637+03:00  INFO 27236 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8085 (http)
2024-07-21T17:59:47.665+03:00  INFO 27236 --- [log-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-21T17:59:47.665+03:00  INFO 27236 --- [log-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-21T17:59:47.767+03:00  INFO 27236 --- [log-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-21T17:59:47.767+03:00  INFO 27236 --- [log-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3305 ms
2024-07-21T17:59:48.400+03:00  INFO 27236 --- [log-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@559e057f], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@45483438, com.mongodb.Jep395RecordCodecProvider@2c0462c4, com.mongodb.KotlinCodecProvider@6bc6cbb5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4ed69e4f], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-07-21T17:59:48.415+03:00  INFO 27236 --- [log-service] [cluster-ClusterId{value='669d2264db39b839463c6992', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30513300}
2024-07-21T17:59:48.653+03:00  WARN 27236 --- [log-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-21T17:59:49.876+03:00  INFO 27236 --- [log-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-21T17:59:49.921+03:00  WARN 27236 --- [log-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-21T17:59:49.929+03:00  INFO 27236 --- [log-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-21T17:59:50.046+03:00  INFO 27236 --- [log-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-21T17:59:50.090+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-21T17:59:50.097+03:00  INFO 27236 --- [log-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T17:59:50.122+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T17:59:50.123+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T17:59:50.123+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T17:59:50.123+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T17:59:50.123+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T17:59:50.123+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-21T17:59:50.123+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T17:59:50.513+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T17:59:50.515+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-21T17:59:50.518+03:00  INFO 27236 --- [log-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-21T17:59:50.524+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721573990523 with initial instances count: 0
2024-07-21T17:59:50.526+03:00  INFO 27236 --- [log-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application LOG-SERVICE with eureka with status UP
2024-07-21T17:59:50.527+03:00  INFO 27236 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721573990526, current=UP, previous=STARTING]
2024-07-21T17:59:50.528+03:00  INFO 27236 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T17:59:50.566+03:00  INFO 27236 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8085 (http) with context path '/'
2024-07-21T17:59:50.567+03:00  INFO 27236 --- [log-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8085
2024-07-21T17:59:50.583+03:00  INFO 27236 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-21T17:59:50.596+03:00  INFO 27236 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T17:59:50.639+03:00  INFO 27236 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#cfe41c8:0/SimpleConnection@509da3a6 [delegate=amqp://admin@127.0.0.1:5672/, localPort=65029]
2024-07-21T17:59:50.698+03:00  INFO 27236 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Started LogServiceApplication in 7.02 seconds (process running for 8.482)
2024-07-21T17:59:50.915+03:00  INFO 27236 --- [log-service] [RMI TCP Connection(2)-192.168.1.178] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-21T17:59:50.916+03:00  INFO 27236 --- [log-service] [RMI TCP Connection(2)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-21T17:59:50.919+03:00  INFO 27236 --- [log-service] [RMI TCP Connection(2)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-07-21T18:00:20.525+03:00  INFO 27236 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T18:00:20.525+03:00  INFO 27236 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T18:00:20.526+03:00  INFO 27236 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T18:00:20.526+03:00  INFO 27236 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T18:00:20.526+03:00  INFO 27236 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T18:00:20.526+03:00  INFO 27236 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2024-07-21T18:00:20.526+03:00  INFO 27236 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T18:00:20.564+03:00  INFO 27236 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T18:02:32.675+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=POST, logType=INFO, message=User registered successfully, timestamp=2024-07-21T18:02:32.631663100, exception=null)
2024-07-21T18:02:41.031+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T18:02:41.017727400, exception=null)
2024-07-21T18:02:47.450+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=GET, logType=INFO, message=User found successfully, timestamp=2024-07-21T18:02:47.446669, exception=null)
2024-07-21T18:02:55.382+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T18:02:55.359313200, exception=null)
2024-07-21T18:03:03.425+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T18:03:03.410380700, exception=null)
2024-07-21T18:03:03.430+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T18:03:03.423373600, exception=null)
2024-07-21T18:03:38.826+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-21T18:03:38.821145300, exception=null)
2024-07-21T18:03:38.893+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=GET, logType=INFO, message=Address found successfully, timestamp=2024-07-21T18:03:38.889931300, exception=null)
2024-07-21T18:03:38.934+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Advert saved successfully, timestamp=2024-07-21T18:03:38.931462200, exception=null)
2024-07-21T18:04:50.133+03:00  INFO 27236 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T18:05:05.690+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T18:05:05.686867500, exception=null)
2024-07-21T18:07:04.783+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T18:07:04.779600300, exception=null)
2024-07-21T18:07:17.515+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T18:07:17.511154500, exception=null)
2024-07-21T18:07:24.347+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T18:07:24.342555700, exception=null)
2024-07-21T18:07:24.353+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T18:07:24.344558, exception=null)
2024-07-21T18:07:37.515+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=ERROR, message=Validation failed for argument [0] in public org.springframework.http.ResponseEntity<unaldi.advertservice.utils.result.DataResult<unaldi.advertservice.entity.dto.response.AdvertResponse>> unaldi.advertservice.controller.AdvertController.save(unaldi.advertservice.entity.dto.request.AdvertSaveRequest): [Field error in object 'advertSaveRequest' on field 'description': rejected value [Adress 1]; codes [Size.advertSaveRequest.description,Size.description,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [advertSaveRequest.description,description]; arguments []; default message [description],250,10]; default message [boyut '10' ile '250' arasında olmalı]] , timestamp=2024-07-21T18:07:37.512809900, exception=400 BAD_REQUEST - MethodArgumentNotValidException)
2024-07-21T18:08:22.481+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=ERROR, message=Validation failed for argument [0] in public org.springframework.http.ResponseEntity<unaldi.advertservice.utils.result.DataResult<unaldi.advertservice.entity.dto.response.AdvertResponse>> unaldi.advertservice.controller.AdvertController.save(unaldi.advertservice.entity.dto.request.AdvertSaveRequest): [Field error in object 'advertSaveRequest' on field 'description': rejected value [Adress 1]; codes [Size.advertSaveRequest.description,Size.description,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [advertSaveRequest.description,description]; arguments []; default message [description],250,10]; default message [boyut '10' ile '250' arasında olmalı]] , timestamp=2024-07-21T18:08:22.462464300, exception=400 BAD_REQUEST - MethodArgumentNotValidException)
2024-07-21T18:09:12.080+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=ERROR, message=Validation failed for argument [0] in public org.springframework.http.ResponseEntity<unaldi.advertservice.utils.result.DataResult<unaldi.advertservice.entity.dto.response.AdvertResponse>> unaldi.advertservice.controller.AdvertController.save(unaldi.advertservice.entity.dto.request.AdvertSaveRequest): [Field error in object 'advertSaveRequest' on field 'description': rejected value [Adress 1]; codes [Size.advertSaveRequest.description,Size.description,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [advertSaveRequest.description,description]; arguments []; default message [description],250,10]; default message [boyut '10' ile '250' arasında olmalı]] , timestamp=2024-07-21T18:09:12.075179100, exception=400 BAD_REQUEST - MethodArgumentNotValidException)
2024-07-21T18:09:50.147+03:00  INFO 27236 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T18:09:54.683+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-21T18:09:54.656960200, exception=null)
2024-07-21T18:09:54.697+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=GET, logType=INFO, message=Address found successfully, timestamp=2024-07-21T18:09:54.691711, exception=null)
2024-07-21T18:09:54.703+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Advert saved successfully, timestamp=2024-07-21T18:09:54.700580400, exception=null)
2024-07-21T18:11:27.781+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T18:11:27.681837100, exception=null)
2024-07-21T18:11:34.342+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T18:11:34.338771300, exception=null)
2024-07-21T18:11:34.347+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T18:11:34.339635100, exception=null)
2024-07-21T18:11:49.032+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-21T18:11:49.029121900, exception=null)
2024-07-21T18:11:49.044+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=GET, logType=INFO, message=Address found successfully, timestamp=2024-07-21T18:11:49.040052, exception=null)
2024-07-21T18:11:49.050+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Advert saved successfully, timestamp=2024-07-21T18:11:49.047455600, exception=null)
2024-07-21T18:13:09.170+03:00  INFO 27236 --- [log-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application LOG-SERVICE with eureka with status DOWN
2024-07-21T18:13:09.171+03:00  INFO 27236 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721574789171, current=DOWN, previous=UP]
2024-07-21T18:13:09.173+03:00  INFO 27236 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T18:13:09.200+03:00  INFO 27236 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T18:13:09.286+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-07-21T18:13:09.784+03:00  INFO 27236 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-07-21T18:13:09.838+03:00  INFO 27236 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-21T18:13:12.850+03:00  INFO 27236 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-21T18:13:12.884+03:00  INFO 27236 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-21T18:13:12.885+03:00  WARN 27236 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T18:13:12.929+03:00  INFO 27236 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-21T18:13:12.929+03:00  WARN 27236 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T18:13:12.929+03:00 ERROR 27236 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T18:13:12.937+03:00  INFO 27236 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-21T18:20:20.739+03:00  INFO 24440 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Starting LogServiceApplication using Java 22.0.1 with PID 24440 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\log-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-21T18:20:20.742+03:00  INFO 24440 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : No active profile set, falling back to 1 default profile: "default"
2024-07-21T18:20:20.828+03:00  INFO 24440 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-21T18:20:20.829+03:00  INFO 24440 --- [log-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-21T18:20:22.833+03:00  INFO 24440 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-07-21T18:20:23.077+03:00  INFO 24440 --- [log-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 236 ms. Found 1 MongoDB repository interface.
2024-07-21T18:20:23.482+03:00  INFO 24440 --- [log-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c0a16ca3-5cf2-36c3-8012-8480c6f53b66
2024-07-21T18:20:23.658+03:00  WARN 24440 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-21T18:20:23.662+03:00  WARN 24440 --- [log-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-21T18:20:24.299+03:00  INFO 24440 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8085 (http)
2024-07-21T18:20:24.319+03:00  INFO 24440 --- [log-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-21T18:20:24.320+03:00  INFO 24440 --- [log-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-21T18:20:24.424+03:00  INFO 24440 --- [log-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-21T18:20:24.424+03:00  INFO 24440 --- [log-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3594 ms
2024-07-21T18:20:25.036+03:00  INFO 24440 --- [log-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2baf3a01], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@211fa215, com.mongodb.Jep395RecordCodecProvider@7680c00e, com.mongodb.KotlinCodecProvider@47370fdd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@159a4a08], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-07-21T18:20:25.069+03:00  INFO 24440 --- [log-service] [cluster-ClusterId{value='669d27381e6a8b13b5137a82', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41151500}
2024-07-21T18:20:25.284+03:00  WARN 24440 --- [log-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-21T18:20:26.655+03:00  INFO 24440 --- [log-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-21T18:20:26.702+03:00  WARN 24440 --- [log-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-21T18:20:26.711+03:00  INFO 24440 --- [log-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-21T18:20:26.843+03:00  INFO 24440 --- [log-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-21T18:20:26.932+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-21T18:20:26.946+03:00  INFO 24440 --- [log-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T18:20:27.003+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T18:20:27.004+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T18:20:27.004+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T18:20:27.004+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T18:20:27.004+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T18:20:27.004+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-21T18:20:27.005+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T18:20:27.405+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T18:20:27.407+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-21T18:20:27.411+03:00  INFO 24440 --- [log-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-21T18:20:27.416+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721575227415 with initial instances count: 0
2024-07-21T18:20:27.418+03:00  INFO 24440 --- [log-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application LOG-SERVICE with eureka with status UP
2024-07-21T18:20:27.419+03:00  INFO 24440 --- [log-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721575227419, current=UP, previous=STARTING]
2024-07-21T18:20:27.420+03:00  INFO 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T18:20:27.450+03:00  INFO 24440 --- [log-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8085 (http) with context path '/'
2024-07-21T18:20:27.451+03:00  INFO 24440 --- [log-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8085
2024-07-21T18:20:27.464+03:00  INFO 24440 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-21T18:20:27.474+03:00  INFO 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration status: 204
2024-07-21T18:20:27.512+03:00  INFO 24440 --- [log-service] [restartedMain] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#1bdc0967:0/SimpleConnection@69cb15da [delegate=amqp://admin@127.0.0.1:5672/, localPort=49394]
2024-07-21T18:20:27.579+03:00  INFO 24440 --- [log-service] [restartedMain] u.logservice.LogServiceApplication       : Started LogServiceApplication in 7.603 seconds (process running for 9.217)
2024-07-21T18:20:27.857+03:00  INFO 24440 --- [log-service] [RMI TCP Connection(5)-192.168.1.178] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-21T18:20:27.857+03:00  INFO 24440 --- [log-service] [RMI TCP Connection(5)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-21T18:20:27.860+03:00  INFO 24440 --- [log-service] [RMI TCP Connection(5)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-07-21T18:20:57.423+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-21T18:20:57.424+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-21T18:20:57.424+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-21T18:20:57.424+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-21T18:20:57.424+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-21T18:20:57.424+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2024-07-21T18:20:57.424+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-21T18:20:57.480+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-21T18:23:46.959+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=user-service, httpRequestMethod=POST, logType=INFO, message=User registered successfully, timestamp=2024-07-21T18:23:46.916936600, exception=null)
2024-07-21T18:23:51.783+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T18:23:51.673049700, exception=null)
2024-07-21T18:23:58.380+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T18:23:58.376568500, exception=null)
2024-07-21T18:24:02.240+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged in successfully, timestamp=2024-07-21T18:24:02.235892300, exception=null)
2024-07-21T18:24:12.993+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Address saved successfully, timestamp=2024-07-21T18:24:12.980739200, exception=null)
2024-07-21T18:24:23.486+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T18:24:23.468169500, exception=null)
2024-07-21T18:24:23.496+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T18:24:23.493, exception=null)
2024-07-21T18:24:23.504+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T18:24:23.501959800, exception=null)
2024-07-21T18:24:23.512+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-21T18:24:23.508290, exception=null)
2024-07-21T18:24:23.516+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-21T18:24:23.510087100, exception=null)
2024-07-21T18:24:46.814+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-21T18:24:46.809403900, exception=null)
2024-07-21T18:24:46.899+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=advert-service, httpRequestMethod=POST, logType=INFO, message=Advert saved successfully, timestamp=2024-07-21T18:24:46.896303700, exception=null)
2024-07-21T18:25:27.016+03:00  INFO 24440 --- [log-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-21T18:25:41.018+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] u.l.utils.rabbitMQ.consumer.LogConsumer  : Log record read from queue : LogDTO(serviceName=auth-service, httpRequestMethod=POST, logType=INFO, message=User logged out successfully, timestamp=2024-07-21T18:25:41.014048800, exception=null)
2024-07-21T18:25:54.356+03:00  INFO 24440 --- [log-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application LOG-SERVICE with eureka with status DOWN
2024-07-21T18:25:54.358+03:00  INFO 24440 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721575554358, current=DOWN, previous=UP]
2024-07-21T18:25:54.363+03:00  INFO 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085: registering service...
2024-07-21T18:25:54.378+03:00  INFO 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2024-07-21T18:25:54.378+03:00  WARN 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T18:25:54.384+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-07-21T18:25:54.394+03:00  INFO 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-07-21T18:25:54.394+03:00  WARN 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/LOG-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T18:25:54.394+03:00  WARN 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T18:25:54.418+03:00  WARN 24440 --- [log-service] [DiscoveryClient-InstanceInfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T18:25:55.130+03:00  INFO 24440 --- [log-service] [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-07-21T18:25:55.193+03:00  INFO 24440 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-21T18:25:57.773+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-07-21T18:25:57.773+03:00  INFO 24440 --- [log-service] [DiscoveryClient-HeartbeatExecutor-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 20 more

2024-07-21T18:25:57.773+03:00  WARN 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T18:25:57.773+03:00  WARN 24440 --- [log-service] [DiscoveryClient-HeartbeatExecutor-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T18:25:57.773+03:00 ERROR 24440 --- [log-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - was unable to send heartbeat!

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T18:25:57.819+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 23 more

2024-07-21T18:25:57.819+03:00  WARN 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T18:25:57.819+03:00  INFO 24440 --- [log-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

2024-07-21T18:25:58.195+03:00  INFO 24440 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-21T18:25:58.211+03:00  INFO 24440 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-21T18:25:58.212+03:00  WARN 24440 --- [log-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-21T18:25:58.212+03:00 ERROR 24440 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_LOG-SERVICE/DESKTOP-AV28T9D.mshome.net:log-service:8085 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-21T18:25:58.219+03:00  INFO 24440 --- [log-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
