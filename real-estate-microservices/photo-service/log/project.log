2024-07-22T00:02:52.192+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:07:52.371+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:12:52.375+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:17:52.376+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:22:52.378+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:27:52.380+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:32:52.382+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:37:52.393+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:41:42.473+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.473207200, exception=null)
2024-07-22T00:41:42.584+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.584110600, exception=null)
2024-07-22T00:41:42.612+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.612865100, exception=null)
2024-07-22T00:41:42.639+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.639829800, exception=null)
2024-07-22T00:41:42.665+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.665078100, exception=null)
2024-07-22T00:41:42.688+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.688349, exception=null)
2024-07-22T00:41:42.714+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.714603700, exception=null)
2024-07-22T00:41:42.738+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.738424900, exception=null)
2024-07-22T00:41:42.761+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.761866, exception=null)
2024-07-22T00:41:42.789+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.789006300, exception=null)
2024-07-22T00:41:42.810+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.810806300, exception=null)
2024-07-22T00:41:42.835+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T00:41:42.835164900, exception=null)
2024-07-22T00:41:43.125+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.125461700, exception=null)
2024-07-22T00:41:43.139+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.139009, exception=null)
2024-07-22T00:41:43.143+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.143072200, exception=null)
2024-07-22T00:41:43.143+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.143072200, exception=null)
2024-07-22T00:41:43.143+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.143634600, exception=null)
2024-07-22T00:41:43.149+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.149158700, exception=null)
2024-07-22T00:41:43.153+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.153690200, exception=null)
2024-07-22T00:41:43.163+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.163199200, exception=null)
2024-07-22T00:41:43.165+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.165198100, exception=null)
2024-07-22T00:41:43.169+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.169197800, exception=null)
2024-07-22T00:41:43.181+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.181173500, exception=null)
2024-07-22T00:41:43.189+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:41:43.188195600, exception=null)
2024-07-22T00:42:52.459+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:45:38.464+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.464816200, exception=null)
2024-07-22T00:45:38.464+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.464816200, exception=null)
2024-07-22T00:45:38.465+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.465818200, exception=null)
2024-07-22T00:45:38.466+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.466449900, exception=null)
2024-07-22T00:45:38.469+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.469485700, exception=null)
2024-07-22T00:45:38.469+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.469949500, exception=null)
2024-07-22T00:45:38.483+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.483043900, exception=null)
2024-07-22T00:45:38.483+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.483043900, exception=null)
2024-07-22T00:45:38.486+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.486044500, exception=null)
2024-07-22T00:45:38.500+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.500853100, exception=null)
2024-07-22T00:45:38.503+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.503866900, exception=null)
2024-07-22T00:45:38.514+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:45:38.514029400, exception=null)
2024-07-22T00:47:52.463+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:48:25.714+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.714799600, exception=null)
2024-07-22T00:48:25.714+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.714799600, exception=null)
2024-07-22T00:48:25.714+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.714799600, exception=null)
2024-07-22T00:48:25.717+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.717809700, exception=null)
2024-07-22T00:48:25.718+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.718808600, exception=null)
2024-07-22T00:48:25.718+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.718808600, exception=null)
2024-07-22T00:48:25.736+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.736340700, exception=null)
2024-07-22T00:48:25.736+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.736340700, exception=null)
2024-07-22T00:48:25.736+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.736340700, exception=null)
2024-07-22T00:48:25.739+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.739864300, exception=null)
2024-07-22T00:48:25.752+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.752987, exception=null)
2024-07-22T00:48:25.752+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:48:25.752987, exception=null)
2024-07-22T00:49:01.300+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.300090500, exception=null)
2024-07-22T00:49:01.332+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.332672200, exception=null)
2024-07-22T00:49:01.342+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.342560400, exception=null)
2024-07-22T00:49:01.350+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.350346100, exception=null)
2024-07-22T00:49:01.359+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.359483200, exception=null)
2024-07-22T00:49:01.366+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.366399900, exception=null)
2024-07-22T00:49:01.378+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.378669600, exception=null)
2024-07-22T00:49:01.387+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.387198400, exception=null)
2024-07-22T00:49:01.394+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.394162600, exception=null)
2024-07-22T00:49:01.400+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.400287500, exception=null)
2024-07-22T00:49:01.406+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.406361600, exception=null)
2024-07-22T00:49:01.414+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:01.414222900, exception=null)
2024-07-22T00:49:32.049+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.049997800, exception=null)
2024-07-22T00:49:32.049+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.049997800, exception=null)
2024-07-22T00:49:32.050+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.050997700, exception=null)
2024-07-22T00:49:32.050+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.050997700, exception=null)
2024-07-22T00:49:32.050+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.050997700, exception=null)
2024-07-22T00:49:32.054+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.054550, exception=null)
2024-07-22T00:49:32.064+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.064717100, exception=null)
2024-07-22T00:49:32.064+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.064717100, exception=null)
2024-07-22T00:49:32.066+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.066718100, exception=null)
2024-07-22T00:49:32.066+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.066718100, exception=null)
2024-07-22T00:49:32.075+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.075964200, exception=null)
2024-07-22T00:49:32.084+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:49:32.084342200, exception=null)
2024-07-22T00:50:15.728+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.728069400, exception=null)
2024-07-22T00:50:15.760+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.760181600, exception=null)
2024-07-22T00:50:15.770+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.770019, exception=null)
2024-07-22T00:50:15.781+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.781989600, exception=null)
2024-07-22T00:50:15.797+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.797570300, exception=null)
2024-07-22T00:50:15.808+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.808967100, exception=null)
2024-07-22T00:50:15.816+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.816115900, exception=null)
2024-07-22T00:50:15.827+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.827994600, exception=null)
2024-07-22T00:50:15.842+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.842897400, exception=null)
2024-07-22T00:50:15.856+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.855790600, exception=null)
2024-07-22T00:50:15.867+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.867229500, exception=null)
2024-07-22T00:50:15.877+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:15.877074700, exception=null)
2024-07-22T00:50:29.556+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.556716900, exception=null)
2024-07-22T00:50:29.581+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.581850400, exception=null)
2024-07-22T00:50:29.590+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.590610300, exception=null)
2024-07-22T00:50:29.600+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.600620800, exception=null)
2024-07-22T00:50:29.612+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.612860800, exception=null)
2024-07-22T00:50:29.619+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.619309300, exception=null)
2024-07-22T00:50:29.627+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.627924, exception=null)
2024-07-22T00:50:29.636+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.636953700, exception=null)
2024-07-22T00:50:29.645+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.645609900, exception=null)
2024-07-22T00:50:29.652+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.652780400, exception=null)
2024-07-22T00:50:29.660+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.660793200, exception=null)
2024-07-22T00:50:29.668+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:50:29.668142600, exception=null)
2024-07-22T00:51:58.359+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.359844400, exception=null)
2024-07-22T00:51:58.359+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.359844400, exception=null)
2024-07-22T00:51:58.358+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.358831100, exception=null)
2024-07-22T00:51:58.360+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.360848600, exception=null)
2024-07-22T00:51:58.361+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.361598400, exception=null)
2024-07-22T00:51:58.362+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.362108900, exception=null)
2024-07-22T00:51:58.375+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.375547300, exception=null)
2024-07-22T00:51:58.376+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.376055400, exception=null)
2024-07-22T00:51:58.375+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.375547300, exception=null)
2024-07-22T00:51:58.377+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.377347100, exception=null)
2024-07-22T00:51:58.394+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.394053800, exception=null)
2024-07-22T00:51:58.405+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:51:58.405343300, exception=null)
2024-07-22T00:52:52.466+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T00:52:56.208+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.208739100, exception=null)
2024-07-22T00:52:56.235+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.235562600, exception=null)
2024-07-22T00:52:56.238+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.238698900, exception=null)
2024-07-22T00:52:56.249+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.249428, exception=null)
2024-07-22T00:52:56.255+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.255748800, exception=null)
2024-07-22T00:52:56.266+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.266632200, exception=null)
2024-07-22T00:52:56.274+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.274204500, exception=null)
2024-07-22T00:52:56.282+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.282456300, exception=null)
2024-07-22T00:52:56.291+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.291893700, exception=null)
2024-07-22T00:52:56.298+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:52:56.298277900, exception=null)
2024-07-22T00:55:14.055+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.055128400, exception=null)
2024-07-22T00:55:14.055+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.055128400, exception=null)
2024-07-22T00:55:14.056+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.056127500, exception=null)
2024-07-22T00:55:14.056+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.056127500, exception=null)
2024-07-22T00:55:14.059+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.059477700, exception=null)
2024-07-22T00:55:14.059+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.059477700, exception=null)
2024-07-22T00:55:14.069+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.069721200, exception=null)
2024-07-22T00:55:14.070+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.070722800, exception=null)
2024-07-22T00:55:14.072+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.071723700, exception=null)
2024-07-22T00:55:14.077+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T00:55:14.077085600, exception=null)
2024-07-22T00:57:52.467+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:01:31.916+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:31.916684600, exception=null)
2024-07-22T01:01:32.032+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.032904, exception=null)
2024-07-22T01:01:32.046+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.046861400, exception=null)
2024-07-22T01:01:32.049+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.049195800, exception=null)
2024-07-22T01:01:32.051+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.051522800, exception=null)
2024-07-22T01:01:32.051+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.051522800, exception=null)
2024-07-22T01:01:32.058+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.058280600, exception=null)
2024-07-22T01:01:32.060+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.060592100, exception=null)
2024-07-22T01:01:32.069+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.069601700, exception=null)
2024-07-22T01:01:32.072+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:01:32.072292300, exception=null)
2024-07-22T01:02:52.501+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:07:52.503+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:08:56.424+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.424310900, exception=null)
2024-07-22T01:08:56.424+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.424310900, exception=null)
2024-07-22T01:08:56.425+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.425311700, exception=null)
2024-07-22T01:08:56.428+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.428323600, exception=null)
2024-07-22T01:08:56.428+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.428323600, exception=null)
2024-07-22T01:08:56.432+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.432343200, exception=null)
2024-07-22T01:08:56.444+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.444124600, exception=null)
2024-07-22T01:08:56.445+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.445135200, exception=null)
2024-07-22T01:08:56.444+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.444124600, exception=null)
2024-07-22T01:08:56.445+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:08:56.445135200, exception=null)
2024-07-22T01:12:52.517+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:14:43.680+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.680652500, exception=null)
2024-07-22T01:14:43.680+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.680652500, exception=null)
2024-07-22T01:14:43.680+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.680652500, exception=null)
2024-07-22T01:14:43.680+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.680652500, exception=null)
2024-07-22T01:14:43.681+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.681654100, exception=null)
2024-07-22T01:14:43.683+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.683762600, exception=null)
2024-07-22T01:14:43.694+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.694088200, exception=null)
2024-07-22T01:14:43.694+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.694624900, exception=null)
2024-07-22T01:14:43.694+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.694624900, exception=null)
2024-07-22T01:14:43.695+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:14:43.695459300, exception=null)
2024-07-22T01:16:32.651+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.651117800, exception=null)
2024-07-22T01:16:32.650+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.650089, exception=null)
2024-07-22T01:16:32.650+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.650089, exception=null)
2024-07-22T01:16:32.653+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.653112200, exception=null)
2024-07-22T01:16:32.654+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.654111400, exception=null)
2024-07-22T01:16:32.655+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.655113900, exception=null)
2024-07-22T01:16:32.666+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.666997300, exception=null)
2024-07-22T01:16:32.667+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.667802500, exception=null)
2024-07-22T01:16:32.668+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.668315200, exception=null)
2024-07-22T01:16:32.669+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:16:32.669841400, exception=null)
2024-07-22T01:17:52.521+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:22:52.537+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:24:58.037+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.037285900, exception=null)
2024-07-22T01:24:58.037+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.037285900, exception=null)
2024-07-22T01:24:58.037+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.037285900, exception=null)
2024-07-22T01:24:58.037+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.037794800, exception=null)
2024-07-22T01:24:58.042+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.042034100, exception=null)
2024-07-22T01:24:58.043+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.043058200, exception=null)
2024-07-22T01:24:58.055+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.055890, exception=null)
2024-07-22T01:24:58.055+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.055890, exception=null)
2024-07-22T01:24:58.055+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.055890, exception=null)
2024-07-22T01:24:58.060+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:24:58.060412, exception=null)
2024-07-22T01:25:28.560+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.560693500, exception=null)
2024-07-22T01:25:28.561+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.561723300, exception=null)
2024-07-22T01:25:28.561+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.561779800, exception=null)
2024-07-22T01:25:28.562+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.562970800, exception=null)
2024-07-22T01:25:28.565+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.565028, exception=null)
2024-07-22T01:25:28.566+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.566137500, exception=null)
2024-07-22T01:25:28.570+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.570531800, exception=null)
2024-07-22T01:25:28.570+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.570531800, exception=null)
2024-07-22T01:25:28.571+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:25:28.571558400, exception=null)
2024-07-22T01:26:10.355+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.355611300, exception=null)
2024-07-22T01:26:10.355+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.355611300, exception=null)
2024-07-22T01:26:10.358+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.358623400, exception=null)
2024-07-22T01:26:10.358+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.358623400, exception=null)
2024-07-22T01:26:10.360+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.360623300, exception=null)
2024-07-22T01:26:10.363+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.363194, exception=null)
2024-07-22T01:26:10.368+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.368816, exception=null)
2024-07-22T01:26:10.373+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.373899, exception=null)
2024-07-22T01:26:10.374+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:26:10.374911, exception=null)
2024-07-22T01:27:52.546+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:31:22.383+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:31:22.383717, exception=null)
2024-07-22T01:31:22.385+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:31:22.385242300, exception=null)
2024-07-22T01:31:22.385+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:31:22.385242300, exception=null)
2024-07-22T01:31:22.385+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:31:22.385242300, exception=null)
2024-07-22T01:31:22.414+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:31:22.414841600, exception=null)
2024-07-22T01:31:22.418+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:31:22.418065500, exception=null)
2024-07-22T01:31:22.421+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:31:22.421772300, exception=null)
2024-07-22T01:31:22.429+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:31:22.429783500, exception=null)
2024-07-22T01:32:52.556+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:32:59.271+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:32:59.271882300, exception=null)
2024-07-22T01:32:59.324+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:32:59.324221900, exception=null)
2024-07-22T01:32:59.359+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:32:59.359684100, exception=null)
2024-07-22T01:32:59.517+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:32:59.517300400, exception=null)
2024-07-22T01:32:59.521+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:32:59.521402400, exception=null)
2024-07-22T01:32:59.521+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:32:59.521402400, exception=null)
2024-07-22T01:32:59.640+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:32:59.640836800, exception=null)
2024-07-22T01:34:23.485+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:34:23.485691200, exception=null)
2024-07-22T01:34:23.485+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:34:23.485691200, exception=null)
2024-07-22T01:34:23.485+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:34:23.485691200, exception=null)
2024-07-22T01:34:23.488+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:34:23.488537300, exception=null)
2024-07-22T01:34:23.488+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:34:23.488537300, exception=null)
2024-07-22T01:36:55.025+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:36:55.025552700, exception=null)
2024-07-22T01:36:55.025+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:36:55.025552700, exception=null)
2024-07-22T01:36:55.025+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:36:55.025552700, exception=null)
2024-07-22T01:36:55.027+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:36:55.027551900, exception=null)
2024-07-22T01:36:55.029+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:36:55.029401900, exception=null)
2024-07-22T01:37:23.628+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:37:23.628517100, exception=null)
2024-07-22T01:37:23.655+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:37:23.655640300, exception=null)
2024-07-22T01:37:23.668+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:37:23.668818, exception=null)
2024-07-22T01:37:23.681+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:37:23.681312200, exception=null)
2024-07-22T01:37:52.564+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:41:45.093+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T01:41:45.093812300, exception=null)
2024-07-22T01:41:45.127+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T01:41:45.127720, exception=null)
2024-07-22T01:41:45.157+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T01:41:45.157251300, exception=null)
2024-07-22T01:41:45.241+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:41:45.241775200, exception=null)
2024-07-22T01:41:45.244+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:41:45.244545800, exception=null)
2024-07-22T01:41:45.244+03:00  INFO 11404 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T01:41:45.244545800, exception=null)
2024-07-22T01:42:52.576+03:00  INFO 11404 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T01:43:47.399+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application PHOTO-SERVICE with eureka with status DOWN
2024-07-22T01:43:47.400+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721601827400, current=DOWN, previous=UP]
2024-07-22T01:43:47.403+03:00  INFO 11404 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082: registering service...
2024-07-22T01:43:47.539+03:00  INFO 11404 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082 - registration status: 204
2024-07-22T01:43:48.165+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-22T01:43:48.217+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-22T01:43:48.324+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-22T01:43:48.326+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-22T01:43:51.340+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-22T01:43:51.377+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-22T01:43:51.377+03:00  WARN 11404 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-22T01:43:51.415+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-22T01:43:51.415+03:00  WARN 11404 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-22T01:43:51.416+03:00 ERROR 11404 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T01:43:51.451+03:00  INFO 11404 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-22T09:50:53.097+03:00  INFO 22692 --- [photo-service] [restartedMain] u.photoservice.PhotoServiceApplication   : Starting PhotoServiceApplication using Java 22.0.1 with PID 22692 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\photo-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-22T09:50:53.191+03:00  INFO 22692 --- [photo-service] [restartedMain] u.photoservice.PhotoServiceApplication   : No active profile set, falling back to 1 default profile: "default"
2024-07-22T09:50:53.276+03:00  INFO 22692 --- [photo-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-22T09:50:53.277+03:00  INFO 22692 --- [photo-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-22T09:50:55.306+03:00  INFO 22692 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-22T09:50:55.308+03:00  INFO 22692 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-22T09:50:55.534+03:00  INFO 22692 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 218 ms. Found 1 JPA repository interface.
2024-07-22T09:50:55.561+03:00  INFO 22692 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-22T09:50:55.564+03:00  INFO 22692 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-22T09:50:55.594+03:00  INFO 22692 --- [photo-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface unaldi.photoservice.repository.PhotoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-22T09:50:55.595+03:00  INFO 22692 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2024-07-22T09:50:56.152+03:00  INFO 22692 --- [photo-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d13dddf2-2a30-305a-8dba-35d0251e38d0
2024-07-22T09:50:56.770+03:00  WARN 22692 --- [photo-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-22T09:50:56.777+03:00  WARN 22692 --- [photo-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-22T09:50:57.631+03:00  INFO 22692 --- [photo-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8082 (http)
2024-07-22T09:50:57.649+03:00  INFO 22692 --- [photo-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-22T09:50:57.650+03:00  INFO 22692 --- [photo-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-22T09:50:57.776+03:00  INFO 22692 --- [photo-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-22T09:50:57.776+03:00  INFO 22692 --- [photo-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4498 ms
2024-07-22T09:50:58.517+03:00  INFO 22692 --- [photo-service] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-22T09:50:58.616+03:00  INFO 22692 --- [photo-service] [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-22T09:50:58.668+03:00  INFO 22692 --- [photo-service] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-07-22T09:50:59.103+03:00  INFO 22692 --- [photo-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-22T09:50:59.139+03:00  INFO 22692 --- [photo-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-22T09:50:59.413+03:00  INFO 22692 --- [photo-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@454bb0a6
2024-07-22T09:50:59.415+03:00  INFO 22692 --- [photo-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-22T09:50:59.447+03:00  WARN 22692 --- [photo-service] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-22T09:51:00.861+03:00  INFO 22692 --- [photo-service] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-22T09:51:00.951+03:00  INFO 22692 --- [photo-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-22T09:51:01.504+03:00  INFO 22692 --- [photo-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-22T09:51:03.525+03:00  WARN 22692 --- [photo-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-22T09:51:06.360+03:00  WARN 22692 --- [photo-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-22T09:51:06.454+03:00  INFO 22692 --- [photo-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-22T09:51:06.609+03:00  WARN 22692 --- [photo-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-22T09:51:06.635+03:00  INFO 22692 --- [photo-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-22T09:51:06.934+03:00  INFO 22692 --- [photo-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-22T09:51:07.001+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-22T09:51:07.009+03:00  INFO 22692 --- [photo-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T09:51:07.052+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-22T09:51:07.052+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-22T09:51:07.052+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-22T09:51:07.052+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-22T09:51:07.053+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-22T09:51:07.053+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-22T09:51:07.053+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-22T09:51:07.695+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-22T09:51:07.699+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-22T09:51:07.702+03:00  INFO 22692 --- [photo-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-22T09:51:07.710+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721631067709 with initial instances count: 2
2024-07-22T09:51:07.723+03:00  INFO 22692 --- [photo-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application PHOTO-SERVICE with eureka with status UP
2024-07-22T09:51:07.724+03:00  INFO 22692 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721631067724, current=UP, previous=STARTING]
2024-07-22T09:51:07.730+03:00  INFO 22692 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082: registering service...
2024-07-22T09:51:07.767+03:00  INFO 22692 --- [photo-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8082 (http) with context path '/'
2024-07-22T09:51:07.768+03:00  INFO 22692 --- [photo-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8082
2024-07-22T09:51:07.819+03:00  INFO 22692 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082 - registration status: 204
2024-07-22T09:51:07.825+03:00  INFO 22692 --- [photo-service] [restartedMain] u.photoservice.PhotoServiceApplication   : Started PhotoServiceApplication in 15.47 seconds (process running for 17.159)
2024-07-22T09:52:06.463+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-22T09:52:06.463+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-22T09:52:06.465+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-07-22T09:52:07.021+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T09:52:07.021559500, exception=null)
2024-07-22T09:52:07.032+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-22T09:52:07.086+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#457ce54:0/SimpleConnection@9e08a88 [delegate=amqp://admin@127.0.0.1:5672/, localPort=49449]
2024-07-22T09:52:07.092+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] o.s.amqp.rabbit.core.RabbitAdmin         : Auto-declaring a non-durable, auto-delete, or exclusive Queue (logs.queue) durable:false, auto-delete:false, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2024-07-22T09:52:07.230+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T09:52:07.230944900, exception=null)
2024-07-22T09:52:07.510+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:52:07.510350200, exception=null)
2024-07-22T09:52:07.518+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:52:07.518061500, exception=null)
2024-07-22T09:52:52.422+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:52:52.422846100, exception=null)
2024-07-22T09:52:52.424+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:52:52.424795400, exception=null)
2024-07-22T09:53:48.416+03:00 ERROR 22692 --- [photo-service] [http-nio-8082-exec-5] u.p.u.c.GlobalExceptionHandler           : PhotoAlreadyExistsException occurred : {0}

unaldi.photoservice.utils.exception.PhotoAlreadyExistsException: Photo name already exists : foto-11.jpg
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.singleUpload(PhotoServiceImpl.java:86) ~[classes/:na]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.lambda$multipleUpload$0(PhotoServiceImpl.java:111) ~[classes/:na]
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782) ~[na:na]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.multipleUpload(PhotoServiceImpl.java:111) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:64) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:416) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:545) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:433) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:74) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720) ~[spring-aop-6.1.10.jar:6.1.10]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl$$SpringCGLIB$$0.multipleUpload(<generated>) ~[classes/:na]
	at unaldi.photoservice.controller.PhotoController.multipleUpload(PhotoController.java:84) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.25.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.25.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T09:53:48.434+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Photo name already exists : foto-11.jpg, timestamp=2024-07-22T09:53:48.434191100, exception=409 CONFLICT - PhotoAlreadyExistsException)
2024-07-22T09:53:48.448+03:00  WARN 22692 --- [photo-service] [http-nio-8082-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [unaldi.photoservice.utils.exception.PhotoAlreadyExistsException: Photo name already exists : foto-11.jpg]
2024-07-22T09:53:57.012+03:00 ERROR 22692 --- [photo-service] [http-nio-8082-exec-2] u.p.u.c.GlobalExceptionHandler           : PhotoAlreadyExistsException occurred : {0}

unaldi.photoservice.utils.exception.PhotoAlreadyExistsException: Photo name already exists : foto-5.jpg
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.singleUpload(PhotoServiceImpl.java:86) ~[classes/:na]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.lambda$multipleUpload$0(PhotoServiceImpl.java:111) ~[classes/:na]
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782) ~[na:na]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.multipleUpload(PhotoServiceImpl.java:111) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:64) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:416) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:545) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:433) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:74) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720) ~[spring-aop-6.1.10.jar:6.1.10]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl$$SpringCGLIB$$0.multipleUpload(<generated>) ~[classes/:na]
	at unaldi.photoservice.controller.PhotoController.multipleUpload(PhotoController.java:84) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.25.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.25.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T09:53:57.203+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Photo name already exists : foto-5.jpg, timestamp=2024-07-22T09:53:57.203314900, exception=409 CONFLICT - PhotoAlreadyExistsException)
2024-07-22T09:53:57.206+03:00  WARN 22692 --- [photo-service] [http-nio-8082-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [unaldi.photoservice.utils.exception.PhotoAlreadyExistsException: Photo name already exists : foto-5.jpg]
2024-07-22T09:54:29.401+03:00 ERROR 22692 --- [photo-service] [http-nio-8082-exec-7] u.p.u.c.GlobalExceptionHandler           : PhotoAlreadyExistsException occurred : {0}

unaldi.photoservice.utils.exception.PhotoAlreadyExistsException: Photo name already exists : foto-20.jpg
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.singleUpload(PhotoServiceImpl.java:86) ~[classes/:na]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.lambda$multipleUpload$0(PhotoServiceImpl.java:111) ~[classes/:na]
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782) ~[na:na]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.multipleUpload(PhotoServiceImpl.java:111) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:64) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:416) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:545) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:433) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:74) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720) ~[spring-aop-6.1.10.jar:6.1.10]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl$$SpringCGLIB$$0.multipleUpload(<generated>) ~[classes/:na]
	at unaldi.photoservice.controller.PhotoController.multipleUpload(PhotoController.java:84) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.25.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.25.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T09:54:29.402+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=ERROR, message=Photo name already exists : foto-20.jpg, timestamp=2024-07-22T09:54:29.402698, exception=409 CONFLICT - PhotoAlreadyExistsException)
2024-07-22T09:54:29.404+03:00  WARN 22692 --- [photo-service] [http-nio-8082-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [unaldi.photoservice.utils.exception.PhotoAlreadyExistsException: Photo name already exists : foto-20.jpg]
2024-07-22T09:54:53.612+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T09:54:53.612762100, exception=null)
2024-07-22T09:54:53.614+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-22T09:54:53.614262, exception=null)
2024-07-22T09:55:40.987+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T09:55:40.987682700, exception=null)
2024-07-22T09:55:48.455+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:55:48.455265700, exception=null)
2024-07-22T09:55:48.456+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:55:48.456263100, exception=null)
2024-07-22T09:55:48.473+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:55:48.473447100, exception=null)
2024-07-22T09:55:59.505+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:55:59.505945500, exception=null)
2024-07-22T09:56:07.069+03:00  INFO 22692 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T09:56:27.149+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:56:27.149595400, exception=null)
2024-07-22T09:56:27.150+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:56:27.150592600, exception=null)
2024-07-22T09:58:13.635+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:58:13.635979, exception=null)
2024-07-22T09:58:13.680+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:58:13.680661900, exception=null)
2024-07-22T09:58:20.833+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:58:20.833918800, exception=null)
2024-07-22T09:58:56.494+03:00  INFO 22692 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T09:58:56.494027300, exception=null)
2024-07-22T09:59:58.411+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application PHOTO-SERVICE with eureka with status DOWN
2024-07-22T09:59:58.412+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721631598411, current=DOWN, previous=UP]
2024-07-22T09:59:58.413+03:00  INFO 22692 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082: registering service...
2024-07-22T09:59:58.439+03:00  INFO 22692 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082 - registration status: 204
2024-07-22T09:59:58.690+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-22T09:59:58.701+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-22T09:59:58.712+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-22T09:59:58.718+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-22T10:00:01.723+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-22T10:00:01.760+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-22T10:00:01.760+03:00  WARN 22692 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-22T10:00:01.799+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-22T10:00:01.799+03:00  WARN 22692 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-22T10:00:01.799+03:00 ERROR 22692 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T10:00:01.806+03:00  INFO 22692 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-22T11:19:00.969+03:00  INFO 14640 --- [photo-service] [restartedMain] u.photoservice.PhotoServiceApplication   : Starting PhotoServiceApplication using Java 22.0.1 with PID 14640 (D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices\photo-service\target\classes started by emree in D:\workspace\java\fmss-bootcamp-final-project\real-estate-microservices)
2024-07-22T11:19:00.982+03:00  INFO 14640 --- [photo-service] [restartedMain] u.photoservice.PhotoServiceApplication   : No active profile set, falling back to 1 default profile: "default"
2024-07-22T11:19:01.073+03:00  INFO 14640 --- [photo-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-22T11:19:01.074+03:00  INFO 14640 --- [photo-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-22T11:19:03.148+03:00  INFO 14640 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-22T11:19:03.150+03:00  INFO 14640 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-22T11:19:03.388+03:00  INFO 14640 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 228 ms. Found 1 JPA repository interface.
2024-07-22T11:19:03.413+03:00  INFO 14640 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-22T11:19:03.416+03:00  INFO 14640 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-22T11:19:03.440+03:00  INFO 14640 --- [photo-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface unaldi.photoservice.repository.PhotoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-22T11:19:03.441+03:00  INFO 14640 --- [photo-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2024-07-22T11:19:03.814+03:00  INFO 14640 --- [photo-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d13dddf2-2a30-305a-8dba-35d0251e38d0
2024-07-22T11:19:04.218+03:00  WARN 14640 --- [photo-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-22T11:19:04.223+03:00  WARN 14640 --- [photo-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-22T11:19:04.753+03:00  INFO 14640 --- [photo-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8082 (http)
2024-07-22T11:19:04.767+03:00  INFO 14640 --- [photo-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-22T11:19:04.767+03:00  INFO 14640 --- [photo-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-22T11:19:04.873+03:00  INFO 14640 --- [photo-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-22T11:19:04.874+03:00  INFO 14640 --- [photo-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3799 ms
2024-07-22T11:19:05.522+03:00  INFO 14640 --- [photo-service] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-22T11:19:05.603+03:00  INFO 14640 --- [photo-service] [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-22T11:19:05.662+03:00  INFO 14640 --- [photo-service] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-07-22T11:19:06.192+03:00  INFO 14640 --- [photo-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-22T11:19:06.218+03:00  INFO 14640 --- [photo-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-22T11:19:06.420+03:00  INFO 14640 --- [photo-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@72e6b7ef
2024-07-22T11:19:06.422+03:00  INFO 14640 --- [photo-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-22T11:19:06.456+03:00  WARN 14640 --- [photo-service] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-22T11:19:08.004+03:00  INFO 14640 --- [photo-service] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-22T11:19:08.124+03:00  WARN 14640 --- [photo-service] [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2024-07-22T11:19:08.124+03:00  WARN 14640 --- [photo-service] [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : constraint "uk2bx8272l60a1t7obqytwvdwiy" of relation "photos" does not exist, skipping
2024-07-22T11:19:08.131+03:00  INFO 14640 --- [photo-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-22T11:19:08.608+03:00  INFO 14640 --- [photo-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-22T11:19:10.585+03:00  WARN 14640 --- [photo-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-22T11:19:12.675+03:00  WARN 14640 --- [photo-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-07-22T11:19:12.728+03:00  INFO 14640 --- [photo-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-22T11:19:12.826+03:00  WARN 14640 --- [photo-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-22T11:19:12.845+03:00  INFO 14640 --- [photo-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2024-07-22T11:19:13.002+03:00  INFO 14640 --- [photo-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-22T11:19:13.051+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-22T11:19:13.058+03:00  INFO 14640 --- [photo-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T11:19:13.083+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-22T11:19:13.083+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-22T11:19:13.083+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-22T11:19:13.083+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-22T11:19:13.083+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-22T11:19:13.084+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-22T11:19:13.084+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-22T11:19:13.568+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-22T11:19:13.571+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-22T11:19:13.575+03:00  INFO 14640 --- [photo-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-22T11:19:13.583+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1721636353582 with initial instances count: 1
2024-07-22T11:19:13.598+03:00  INFO 14640 --- [photo-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application PHOTO-SERVICE with eureka with status UP
2024-07-22T11:19:13.599+03:00  INFO 14640 --- [photo-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721636353599, current=UP, previous=STARTING]
2024-07-22T11:19:13.601+03:00  INFO 14640 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082: registering service...
2024-07-22T11:19:13.632+03:00  INFO 14640 --- [photo-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8082 (http) with context path '/'
2024-07-22T11:19:13.634+03:00  INFO 14640 --- [photo-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8082
2024-07-22T11:19:13.672+03:00  INFO 14640 --- [photo-service] [restartedMain] u.photoservice.PhotoServiceApplication   : Started PhotoServiceApplication in 13.381 seconds (process running for 14.955)
2024-07-22T11:19:13.674+03:00  INFO 14640 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082 - registration status: 204
2024-07-22T11:19:14.206+03:00  INFO 14640 --- [photo-service] [RMI TCP Connection(6)-192.168.1.178] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-22T11:19:14.206+03:00  INFO 14640 --- [photo-service] [RMI TCP Connection(7)-192.168.1.178] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-07-22T11:19:14.206+03:00  INFO 14640 --- [photo-service] [RMI TCP Connection(6)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-07-22T11:19:14.210+03:00  INFO 14640 --- [photo-service] [RMI TCP Connection(6)-192.168.1.178] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2024-07-22T11:19:14.303+03:00  INFO 14640 --- [photo-service] [RMI TCP Connection(7)-192.168.1.178] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#7fe446cb:0/SimpleConnection@2c23da42 [delegate=amqp://admin@127.0.0.1:5672/, localPort=51435]
2024-07-22T11:19:14.316+03:00  INFO 14640 --- [photo-service] [RMI TCP Connection(7)-192.168.1.178] o.s.amqp.rabbit.core.RabbitAdmin         : Auto-declaring a non-durable, auto-delete, or exclusive Queue (logs.queue) durable:false, auto-delete:false, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2024-07-22T11:20:19.109+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.109677900, exception=null)
2024-07-22T11:20:19.127+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.127348800, exception=null)
2024-07-22T11:20:19.139+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.139238300, exception=null)
2024-07-22T11:20:19.145+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.145502900, exception=null)
2024-07-22T11:20:19.152+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.152291100, exception=null)
2024-07-22T11:20:19.158+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.158364100, exception=null)
2024-07-22T11:20:19.165+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.165260, exception=null)
2024-07-22T11:20:19.173+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.173466300, exception=null)
2024-07-22T11:20:19.180+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.180388200, exception=null)
2024-07-22T11:20:19.189+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.189176400, exception=null)
2024-07-22T11:20:19.196+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.196714200, exception=null)
2024-07-22T11:20:19.204+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.204507500, exception=null)
2024-07-22T11:20:19.211+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.211251700, exception=null)
2024-07-22T11:20:19.219+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.219322700, exception=null)
2024-07-22T11:20:19.227+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.227702700, exception=null)
2024-07-22T11:20:19.236+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.236300900, exception=null)
2024-07-22T11:20:19.245+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.245530500, exception=null)
2024-07-22T11:20:19.254+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.254989300, exception=null)
2024-07-22T11:20:19.264+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.264255300, exception=null)
2024-07-22T11:20:19.273+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T11:20:19.273793300, exception=null)
2024-07-22T11:20:19.275+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-22T11:20:19.275235800, exception=null)
2024-07-22T11:24:13.099+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T11:26:53.621+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:26:53.621800, exception=null)
2024-07-22T11:27:48.450+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:27:48.450867800, exception=null)
2024-07-22T11:28:43.253+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:28:43.253210600, exception=null)
2024-07-22T11:29:13.106+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T11:29:53.361+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:29:53.361881600, exception=null)
2024-07-22T11:30:43.283+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:30:43.283929100, exception=null)
2024-07-22T11:31:45.318+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:31:45.318986400, exception=null)
2024-07-22T11:32:46.001+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:32:46.001408700, exception=null)
2024-07-22T11:33:36.911+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:33:36.911703600, exception=null)
2024-07-22T11:34:13.117+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T11:34:49.646+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:34:49.645898500, exception=null)
2024-07-22T11:36:14.544+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T11:36:14.544500400, exception=null)
2024-07-22T11:39:13.127+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T11:44:13.137+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T11:45:43.303+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.303714200, exception=null)
2024-07-22T11:45:43.320+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.320727300, exception=null)
2024-07-22T11:45:43.323+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.323727800, exception=null)
2024-07-22T11:45:43.323+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.323727800, exception=null)
2024-07-22T11:45:43.324+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.324728100, exception=null)
2024-07-22T11:45:43.344+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.344123500, exception=null)
2024-07-22T11:45:43.349+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.349718, exception=null)
2024-07-22T11:45:43.349+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.349718, exception=null)
2024-07-22T11:45:43.350+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.350715700, exception=null)
2024-07-22T11:45:43.351+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:45:43.351951800, exception=null)
2024-07-22T11:48:30.999+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:48:30.999951, exception=null)
2024-07-22T11:49:13.140+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T11:51:29.796+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:51:29.796295800, exception=null)
2024-07-22T11:51:29.798+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:51:29.798943500, exception=null)
2024-07-22T11:53:13.382+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.382084300, exception=null)
2024-07-22T11:53:13.382+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.382084300, exception=null)
2024-07-22T11:53:13.389+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.389098, exception=null)
2024-07-22T11:53:13.391+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.391082400, exception=null)
2024-07-22T11:53:13.399+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.399057300, exception=null)
2024-07-22T11:53:13.401+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.401057800, exception=null)
2024-07-22T11:53:13.403+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.403056200, exception=null)
2024-07-22T11:53:13.412+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.412057200, exception=null)
2024-07-22T11:53:13.419+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.419324, exception=null)
2024-07-22T11:53:13.423+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T11:53:13.423323, exception=null)
2024-07-22T11:54:13.153+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T11:59:13.169+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:04:13.175+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:09:13.184+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:14:13.189+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:19:13.197+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:24:13.212+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:26:12.989+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:12.989312500, exception=null)
2024-07-22T12:26:12.989+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:12.989312500, exception=null)
2024-07-22T12:26:12.989+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:12.989312500, exception=null)
2024-07-22T12:26:12.990+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:12.990312400, exception=null)
2024-07-22T12:26:12.991+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:12.991313900, exception=null)
2024-07-22T12:26:12.991+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:12.991611700, exception=null)
2024-07-22T12:26:13.011+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:13.011032, exception=null)
2024-07-22T12:26:13.014+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:13.014031, exception=null)
2024-07-22T12:26:13.014+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:13.014031, exception=null)
2024-07-22T12:26:13.022+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:13.022035500, exception=null)
2024-07-22T12:26:20.237+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.237885900, exception=null)
2024-07-22T12:26:20.237+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.237885900, exception=null)
2024-07-22T12:26:20.237+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.237885900, exception=null)
2024-07-22T12:26:20.239+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.239403400, exception=null)
2024-07-22T12:26:20.240+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.240193300, exception=null)
2024-07-22T12:26:20.241+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.241340800, exception=null)
2024-07-22T12:26:20.259+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.259966500, exception=null)
2024-07-22T12:26:20.261+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.261965700, exception=null)
2024-07-22T12:26:20.270+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.270707400, exception=null)
2024-07-22T12:26:20.272+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:20.272705500, exception=null)
2024-07-22T12:26:27.488+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:27.488959500, exception=null)
2024-07-22T12:26:33.830+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:33.830330700, exception=null)
2024-07-22T12:26:41.388+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:41.388920, exception=null)
2024-07-22T12:26:49.779+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.779407600, exception=null)
2024-07-22T12:26:49.779+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.779407600, exception=null)
2024-07-22T12:26:49.779+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.779407600, exception=null)
2024-07-22T12:26:49.779+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.779407600, exception=null)
2024-07-22T12:26:49.782+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.782043700, exception=null)
2024-07-22T12:26:49.782+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.782043700, exception=null)
2024-07-22T12:26:49.798+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.798646900, exception=null)
2024-07-22T12:26:49.799+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.799154400, exception=null)
2024-07-22T12:26:49.801+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.801165900, exception=null)
2024-07-22T12:26:49.803+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:26:49.803168300, exception=null)
2024-07-22T12:29:13.227+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:34:13.235+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:37:00.774+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.774369800, exception=null)
2024-07-22T12:37:00.774+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.774369800, exception=null)
2024-07-22T12:37:00.774+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.774369800, exception=null)
2024-07-22T12:37:00.774+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.774369800, exception=null)
2024-07-22T12:37:00.775+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.775880, exception=null)
2024-07-22T12:37:00.777+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.777892900, exception=null)
2024-07-22T12:37:00.798+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.798686, exception=null)
2024-07-22T12:37:00.799+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.799701700, exception=null)
2024-07-22T12:37:00.799+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.799701700, exception=null)
2024-07-22T12:37:00.808+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:00.808232300, exception=null)
2024-07-22T12:37:21.220+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:37:21.220892, exception=null)
2024-07-22T12:37:21.250+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:37:21.250779, exception=null)
2024-07-22T12:38:18.186+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.186254500, exception=null)
2024-07-22T12:38:18.189+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.189808100, exception=null)
2024-07-22T12:38:18.194+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.194062500, exception=null)
2024-07-22T12:38:18.200+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.200517700, exception=null)
2024-07-22T12:38:18.205+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.205546500, exception=null)
2024-07-22T12:38:18.205+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.205546500, exception=null)
2024-07-22T12:38:18.231+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.231211100, exception=null)
2024-07-22T12:38:18.238+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.238235100, exception=null)
2024-07-22T12:38:18.243+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:18.243782, exception=null)
2024-07-22T12:38:52.618+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:38:52.618858800, exception=null)
2024-07-22T12:38:52.669+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:38:52.669104900, exception=null)
2024-07-22T12:38:52.744+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:38:52.744104100, exception=null)
2024-07-22T12:38:52.782+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:38:52.782878300, exception=null)
2024-07-22T12:38:52.817+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:38:52.817943700, exception=null)
2024-07-22T12:38:52.843+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:38:52.843583400, exception=null)
2024-07-22T12:38:52.872+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:38:52.872174400, exception=null)
2024-07-22T12:38:52.901+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:38:52.900884600, exception=null)
2024-07-22T12:38:52.925+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.925953700, exception=null)
2024-07-22T12:38:52.945+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.945136600, exception=null)
2024-07-22T12:38:52.950+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.950076700, exception=null)
2024-07-22T12:38:52.957+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.957869700, exception=null)
2024-07-22T12:38:52.962+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.962213200, exception=null)
2024-07-22T12:38:52.969+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.969741300, exception=null)
2024-07-22T12:38:52.977+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.977199200, exception=null)
2024-07-22T12:38:52.982+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.982267700, exception=null)
2024-07-22T12:38:52.991+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:38:52.991563500, exception=null)
2024-07-22T12:39:13.247+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:39:57.080+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T12:39:57.080125500, exception=null)
2024-07-22T12:39:57.096+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T12:39:57.096930300, exception=null)
2024-07-22T12:39:57.097+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-22T12:39:57.097465400, exception=null)
2024-07-22T12:40:40.418+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:40:40.418591100, exception=null)
2024-07-22T12:40:43.800+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.800333800, exception=null)
2024-07-22T12:40:43.830+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.830300400, exception=null)
2024-07-22T12:40:43.833+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.833315900, exception=null)
2024-07-22T12:40:43.839+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.839326700, exception=null)
2024-07-22T12:40:43.846+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.846236400, exception=null)
2024-07-22T12:40:43.850+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.850648400, exception=null)
2024-07-22T12:40:43.858+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.858048800, exception=null)
2024-07-22T12:40:43.861+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.861170700, exception=null)
2024-07-22T12:40:43.861+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.861170700, exception=null)
2024-07-22T12:40:43.890+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:40:43.890352200, exception=null)
2024-07-22T12:44:13.248+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:45:22.990+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=DELETE, logType=INFO, message=Photo deleted successfully, timestamp=2024-07-22T12:45:22.989068100, exception=null)
2024-07-22T12:45:34.246+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=DELETE, logType=INFO, message=Photo deleted successfully, timestamp=2024-07-22T12:45:34.246189300, exception=null)
2024-07-22T12:46:35.773+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.773739100, exception=null)
2024-07-22T12:46:35.773+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.773739100, exception=null)
2024-07-22T12:46:35.773+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.773739100, exception=null)
2024-07-22T12:46:35.774+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.774738100, exception=null)
2024-07-22T12:46:35.777+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.777663500, exception=null)
2024-07-22T12:46:35.777+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.777663500, exception=null)
2024-07-22T12:46:35.806+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.806946600, exception=null)
2024-07-22T12:46:35.807+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.807945500, exception=null)
2024-07-22T12:46:35.815+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:46:35.815097400, exception=null)
2024-07-22T12:46:35.835+03:00 ERROR 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.u.c.GlobalExceptionHandler           : PhotoNotFoundException occurred : {0}

unaldi.photoservice.utils.exception.PhotoNotFoundException: Photo not found in database
	at unaldi.photoservice.service.Impl.PhotoServiceImpl.downloadById(PhotoServiceImpl.java:166) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.10.jar:6.1.10]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716) ~[spring-aop-6.1.10.jar:6.1.10]
	at unaldi.photoservice.service.Impl.PhotoServiceImpl$$SpringCGLIB$$0.downloadById(<generated>) ~[classes/:na]
	at unaldi.photoservice.controller.PhotoController.downloadById(PhotoController.java:199) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.25.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.10.jar:6.1.10]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.25.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.10.jar:6.1.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.10.jar:6.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.25.jar:10.1.25]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T12:46:36.059+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=ERROR, message=Photo not found in database, timestamp=2024-07-22T12:46:36.059856900, exception=404 NOT_FOUND - PhotoNotFoundException)
2024-07-22T12:46:36.084+03:00  WARN 14640 --- [photo-service] [http-nio-8082-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [unaldi.photoservice.utils.exception.PhotoNotFoundException: Photo not found in database]
2024-07-22T12:47:16.846+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:16.846454600, exception=null)
2024-07-22T12:47:16.878+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:16.878741100, exception=null)
2024-07-22T12:47:16.920+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:16.920634200, exception=null)
2024-07-22T12:47:16.949+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:16.949847500, exception=null)
2024-07-22T12:47:16.980+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:16.980367700, exception=null)
2024-07-22T12:47:17.010+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:17.010763100, exception=null)
2024-07-22T12:47:17.040+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:17.040764500, exception=null)
2024-07-22T12:47:17.071+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:17.071456200, exception=null)
2024-07-22T12:47:17.101+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:47:17.101520200, exception=null)
2024-07-22T12:47:17.124+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.124656900, exception=null)
2024-07-22T12:47:17.155+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.155274200, exception=null)
2024-07-22T12:47:17.157+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.157272200, exception=null)
2024-07-22T12:47:17.166+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.166665200, exception=null)
2024-07-22T12:47:17.172+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.172434200, exception=null)
2024-07-22T12:47:17.177+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.177900900, exception=null)
2024-07-22T12:47:17.180+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.180364700, exception=null)
2024-07-22T12:47:17.188+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.187746400, exception=null)
2024-07-22T12:47:17.193+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:47:17.193354900, exception=null)
2024-07-22T12:48:30.982+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:30.982316500, exception=null)
2024-07-22T12:48:30.984+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:30.984342400, exception=null)
2024-07-22T12:48:30.985+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:30.985319700, exception=null)
2024-07-22T12:48:30.991+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:30.991914800, exception=null)
2024-07-22T12:48:30.991+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:30.991914800, exception=null)
2024-07-22T12:48:31.015+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:31.015774300, exception=null)
2024-07-22T12:48:31.016+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:31.016775300, exception=null)
2024-07-22T12:48:31.018+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:31.018285200, exception=null)
2024-07-22T12:48:31.051+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:31.050008800, exception=null)
2024-07-22T12:48:39.826+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:48:39.826806500, exception=null)
2024-07-22T12:49:13.261+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:49:29.486+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:49:29.486704400, exception=null)
2024-07-22T12:49:29.486+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:49:29.486704400, exception=null)
2024-07-22T12:49:29.487+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:49:29.487701500, exception=null)
2024-07-22T12:49:29.492+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:49:29.492237900, exception=null)
2024-07-22T12:49:29.499+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:49:29.499765500, exception=null)
2024-07-22T12:49:29.505+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:49:29.505287, exception=null)
2024-07-22T12:49:29.507+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:49:29.507794800, exception=null)
2024-07-22T12:49:29.508+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:49:29.508559100, exception=null)
2024-07-22T12:50:26.960+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T12:50:26.960719600, exception=null)
2024-07-22T12:50:26.971+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T12:50:26.971667600, exception=null)
2024-07-22T12:50:26.972+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-22T12:50:26.972785100, exception=null)
2024-07-22T12:51:12.513+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:51:12.513549100, exception=null)
2024-07-22T12:51:16.959+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:16.959102600, exception=null)
2024-07-22T12:51:16.984+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:16.984148500, exception=null)
2024-07-22T12:51:16.993+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:16.993282100, exception=null)
2024-07-22T12:51:16.999+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:16.999740100, exception=null)
2024-07-22T12:51:17.004+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:17.004162600, exception=null)
2024-07-22T12:51:17.006+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:17.006853500, exception=null)
2024-07-22T12:51:17.012+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:17.012911100, exception=null)
2024-07-22T12:51:17.015+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:17.015933800, exception=null)
2024-07-22T12:51:17.020+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:17.020942400, exception=null)
2024-07-22T12:51:17.042+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:17.042188600, exception=null)
2024-07-22T12:51:24.805+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:24.805159500, exception=null)
2024-07-22T12:51:34.950+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.950511400, exception=null)
2024-07-22T12:51:34.950+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.950511400, exception=null)
2024-07-22T12:51:34.950+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.950511400, exception=null)
2024-07-22T12:51:34.951+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.950511400, exception=null)
2024-07-22T12:51:34.953+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.953510800, exception=null)
2024-07-22T12:51:34.955+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.954509200, exception=null)
2024-07-22T12:51:34.968+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.968658200, exception=null)
2024-07-22T12:51:34.974+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.974905500, exception=null)
2024-07-22T12:51:34.981+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:51:34.980654, exception=null)
2024-07-22T12:52:01.251+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.251850500, exception=null)
2024-07-22T12:52:01.281+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.281534900, exception=null)
2024-07-22T12:52:01.282+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.282049300, exception=null)
2024-07-22T12:52:01.293+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.293588200, exception=null)
2024-07-22T12:52:01.298+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.298636500, exception=null)
2024-07-22T12:52:01.313+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.313709900, exception=null)
2024-07-22T12:52:01.313+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.313709900, exception=null)
2024-07-22T12:52:01.321+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.321080900, exception=null)
2024-07-22T12:52:01.328+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:52:01.328813100, exception=null)
2024-07-22T12:53:27.643+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=DELETE, logType=INFO, message=Photo deleted successfully, timestamp=2024-07-22T12:53:27.643865400, exception=null)
2024-07-22T12:53:35.772+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=DELETE, logType=INFO, message=Photo deleted successfully, timestamp=2024-07-22T12:53:35.772099900, exception=null)
2024-07-22T12:53:56.589+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.589001800, exception=null)
2024-07-22T12:53:56.589+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.589001800, exception=null)
2024-07-22T12:53:56.591+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.591000800, exception=null)
2024-07-22T12:53:56.591+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.591000800, exception=null)
2024-07-22T12:53:56.592+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.592841, exception=null)
2024-07-22T12:53:56.596+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.596283300, exception=null)
2024-07-22T12:53:56.609+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.609358900, exception=null)
2024-07-22T12:53:56.610+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.610358900, exception=null)
2024-07-22T12:53:56.613+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:53:56.613471300, exception=null)
2024-07-22T12:54:01.115+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.115523100, exception=null)
2024-07-22T12:54:01.115+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.115523100, exception=null)
2024-07-22T12:54:01.116+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.116522200, exception=null)
2024-07-22T12:54:01.118+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.118523800, exception=null)
2024-07-22T12:54:01.118+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.118523800, exception=null)
2024-07-22T12:54:01.119+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.118523800, exception=null)
2024-07-22T12:54:01.131+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.131393500, exception=null)
2024-07-22T12:54:01.132+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.132768400, exception=null)
2024-07-22T12:54:01.136+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:01.136061200, exception=null)
2024-07-22T12:54:13.293+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:54:51.223+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.223317300, exception=null)
2024-07-22T12:54:51.225+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.225882900, exception=null)
2024-07-22T12:54:51.228+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.228849, exception=null)
2024-07-22T12:54:51.230+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.230849200, exception=null)
2024-07-22T12:54:51.232+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.232850500, exception=null)
2024-07-22T12:54:51.234+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.234849900, exception=null)
2024-07-22T12:54:51.251+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.250926600, exception=null)
2024-07-22T12:54:51.251+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.251926, exception=null)
2024-07-22T12:54:51.251+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:51.251926, exception=null)
2024-07-22T12:54:55.595+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:54:55.595606, exception=null)
2024-07-22T12:55:17.043+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:55:17.043911200, exception=null)
2024-07-22T12:55:17.043+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:55:17.043911200, exception=null)
2024-07-22T12:55:17.048+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:55:17.048445800, exception=null)
2024-07-22T12:55:17.049+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:55:17.049449700, exception=null)
2024-07-22T12:55:17.059+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:55:17.059850, exception=null)
2024-07-22T12:55:17.061+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:55:17.061848700, exception=null)
2024-07-22T12:55:17.075+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:55:17.075701400, exception=null)
2024-07-22T12:55:17.077+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:55:17.077715100, exception=null)
2024-07-22T12:55:46.665+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T12:55:46.665584900, exception=null)
2024-07-22T12:55:46.675+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T12:55:46.675745400, exception=null)
2024-07-22T12:55:46.676+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-22T12:55:46.676286600, exception=null)
2024-07-22T12:56:18.617+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:18.617095800, exception=null)
2024-07-22T12:56:22.326+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.326002600, exception=null)
2024-07-22T12:56:22.395+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.395241200, exception=null)
2024-07-22T12:56:22.445+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.445565600, exception=null)
2024-07-22T12:56:22.488+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.488333, exception=null)
2024-07-22T12:56:22.520+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.520105600, exception=null)
2024-07-22T12:56:22.550+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.550963300, exception=null)
2024-07-22T12:56:22.593+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.593625900, exception=null)
2024-07-22T12:56:22.625+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.625508400, exception=null)
2024-07-22T12:56:22.655+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T12:56:22.655260, exception=null)
2024-07-22T12:56:22.713+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.713958200, exception=null)
2024-07-22T12:56:22.742+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.742869100, exception=null)
2024-07-22T12:56:22.747+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.747178600, exception=null)
2024-07-22T12:56:22.758+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.758699900, exception=null)
2024-07-22T12:56:22.761+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.761712900, exception=null)
2024-07-22T12:56:22.772+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.772399400, exception=null)
2024-07-22T12:56:22.778+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.778701200, exception=null)
2024-07-22T12:56:22.783+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.783634600, exception=null)
2024-07-22T12:56:22.791+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.791142200, exception=null)
2024-07-22T12:56:22.815+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:22.815669300, exception=null)
2024-07-22T12:56:25.894+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:25.894196700, exception=null)
2024-07-22T12:56:54.472+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.472950300, exception=null)
2024-07-22T12:56:54.509+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.509401400, exception=null)
2024-07-22T12:56:54.513+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.513570700, exception=null)
2024-07-22T12:56:54.523+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.523087, exception=null)
2024-07-22T12:56:54.525+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.525597900, exception=null)
2024-07-22T12:56:54.542+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.542552300, exception=null)
2024-07-22T12:56:54.542+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.542552300, exception=null)
2024-07-22T12:56:54.549+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.549090300, exception=null)
2024-07-22T12:56:54.549+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:56:54.549090300, exception=null)
2024-07-22T12:59:13.295+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T12:59:28.638+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.638948500, exception=null)
2024-07-22T12:59:28.638+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.638948500, exception=null)
2024-07-22T12:59:28.638+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.638948500, exception=null)
2024-07-22T12:59:28.640+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.640512700, exception=null)
2024-07-22T12:59:28.641+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.641471400, exception=null)
2024-07-22T12:59:28.642+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.642471800, exception=null)
2024-07-22T12:59:28.657+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.657789900, exception=null)
2024-07-22T12:59:28.657+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.657789900, exception=null)
2024-07-22T12:59:28.681+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:28.681803600, exception=null)
2024-07-22T12:59:43.568+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.568802900, exception=null)
2024-07-22T12:59:43.568+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.568802900, exception=null)
2024-07-22T12:59:43.568+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.568802900, exception=null)
2024-07-22T12:59:43.587+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.587300300, exception=null)
2024-07-22T12:59:43.587+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.587935300, exception=null)
2024-07-22T12:59:43.587+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.587935300, exception=null)
2024-07-22T12:59:43.590+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.590235200, exception=null)
2024-07-22T12:59:43.599+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.599661700, exception=null)
2024-07-22T12:59:43.599+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T12:59:43.599661700, exception=null)
2024-07-22T13:01:14.710+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=DELETE, logType=INFO, message=Photo deleted successfully, timestamp=2024-07-22T13:01:14.710332200, exception=null)
2024-07-22T13:01:23.822+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=DELETE, logType=INFO, message=Photo deleted successfully, timestamp=2024-07-22T13:01:23.822802300, exception=null)
2024-07-22T13:02:50.783+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.783221700, exception=null)
2024-07-22T13:02:50.783+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.783221700, exception=null)
2024-07-22T13:02:50.784+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.784233100, exception=null)
2024-07-22T13:02:50.784+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.784233100, exception=null)
2024-07-22T13:02:50.784+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.784233100, exception=null)
2024-07-22T13:02:50.787+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.787232500, exception=null)
2024-07-22T13:02:50.825+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.825863100, exception=null)
2024-07-22T13:02:50.828+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.828861, exception=null)
2024-07-22T13:02:50.828+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:02:50.828861, exception=null)
2024-07-22T13:03:24.652+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T13:03:24.652406600, exception=null)
2024-07-22T13:03:24.661+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Single photo uploaded successfully, timestamp=2024-07-22T13:03:24.661921400, exception=null)
2024-07-22T13:03:24.662+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Multiple photo uploaded successfully, timestamp=2024-07-22T13:03:24.662987700, exception=null)
2024-07-22T13:04:02.120+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:02.120733200, exception=null)
2024-07-22T13:04:06.738+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:06.738597500, exception=null)
2024-07-22T13:04:06.778+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:06.778822600, exception=null)
2024-07-22T13:04:06.817+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:06.817759600, exception=null)
2024-07-22T13:04:06.848+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:06.848724100, exception=null)
2024-07-22T13:04:06.879+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:06.879454900, exception=null)
2024-07-22T13:04:06.909+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:06.909954, exception=null)
2024-07-22T13:04:06.940+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:06.940341600, exception=null)
2024-07-22T13:04:06.969+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:06.969232800, exception=null)
2024-07-22T13:04:07.002+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=POST, logType=INFO, message=Photos were successfully listed by their ids, timestamp=2024-07-22T13:04:07.002439100, exception=null)
2024-07-22T13:04:07.046+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.046224900, exception=null)
2024-07-22T13:04:07.075+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.075256800, exception=null)
2024-07-22T13:04:07.085+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.085067900, exception=null)
2024-07-22T13:04:07.091+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.091234200, exception=null)
2024-07-22T13:04:07.092+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.092713900, exception=null)
2024-07-22T13:04:07.098+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.098230500, exception=null)
2024-07-22T13:04:07.101+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.101597900, exception=null)
2024-07-22T13:04:07.111+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.111029300, exception=null)
2024-07-22T13:04:07.119+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.119619, exception=null)
2024-07-22T13:04:07.135+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:07.135795, exception=null)
2024-07-22T13:04:10.946+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:10.946526800, exception=null)
2024-07-22T13:04:13.310+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T13:04:38.203+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.203478400, exception=null)
2024-07-22T13:04:38.204+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.204489200, exception=null)
2024-07-22T13:04:38.204+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.204489200, exception=null)
2024-07-22T13:04:38.205+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.205490600, exception=null)
2024-07-22T13:04:38.207+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.207492800, exception=null)
2024-07-22T13:04:38.208+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.208493800, exception=null)
2024-07-22T13:04:38.225+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-2] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.225648800, exception=null)
2024-07-22T13:04:38.225+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.225648800, exception=null)
2024-07-22T13:04:38.234+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:04:38.234713200, exception=null)
2024-07-22T13:05:01.132+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-8] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.132469500, exception=null)
2024-07-22T13:05:01.156+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-5] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.156251500, exception=null)
2024-07-22T13:05:01.165+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-3] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.165712800, exception=null)
2024-07-22T13:05:01.173+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-6] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.173849700, exception=null)
2024-07-22T13:05:01.191+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-9] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.191453300, exception=null)
2024-07-22T13:05:01.192+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-7] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.192468500, exception=null)
2024-07-22T13:05:01.198+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-4] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.198473600, exception=null)
2024-07-22T13:05:01.199+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-10] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.199475600, exception=null)
2024-07-22T13:05:01.202+03:00  INFO 14640 --- [photo-service] [http-nio-8082-exec-1] u.p.utils.rabbitMQ.producer.LogProducer  : Log record written to queue : LogDTO(serviceName=photo-service, httpRequestMethod=GET, logType=INFO, message=Photo downloaded successfully, timestamp=2024-07-22T13:05:01.202001400, exception=null)
2024-07-22T13:09:13.320+03:00  INFO 14640 --- [photo-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-22T13:12:17.905+03:00  INFO 14640 --- [photo-service] [lettuce-eventExecutorLoop-1-2] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/127.0.0.1:6379
2024-07-22T13:12:17.905+03:00  INFO 14640 --- [photo-service] [lettuce-eventExecutorLoop-1-1] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was localhost/127.0.0.1:6379
2024-07-22T13:12:17.925+03:00  WARN 14640 --- [photo-service] [lettuce-nioEventLoop-4-4] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost/<unresolved>:6379]: Connection closed prematurely

io.lettuce.core.RedisConnectionException: Connection closed prematurely
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:91) ~[lettuce-core-6.3.2.RELEASE.jar:6.3.2.RELEASE/8941aea]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69) ~[lettuce-core-6.3.2.RELEASE.jar:6.3.2.RELEASE/8941aea]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T13:12:17.925+03:00  WARN 14640 --- [photo-service] [lettuce-nioEventLoop-4-3] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [localhost/<unresolved>:6379]: Connection closed prematurely

io.lettuce.core.RedisConnectionException: Connection closed prematurely
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:91) ~[lettuce-core-6.3.2.RELEASE.jar:6.3.2.RELEASE/8941aea]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69) ~[lettuce-core-6.3.2.RELEASE.jar:6.3.2.RELEASE/8941aea]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566) ~[netty-transport-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.111.Final.jar:4.1.111.Final]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T13:12:23.940+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application PHOTO-SERVICE with eureka with status DOWN
2024-07-22T13:12:23.942+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1721643143942, current=DOWN, previous=UP]
2024-07-22T13:12:23.943+03:00  INFO 14640 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082: registering service...
2024-07-22T13:12:24.031+03:00  INFO 14640 --- [photo-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082 - registration status: 204
2024-07-22T13:12:24.263+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-22T13:12:24.282+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-22T13:12:24.309+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-22T13:12:24.310+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-22T13:12:27.330+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-22T13:12:27.367+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2024-07-22T13:12:27.368+03:00  WARN 14640 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-22T13:12:27.384+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2024-07-22T13:12:27.385+03:00  WARN 14640 --- [photo-service] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt
2024-07-22T13:12:27.385+03:00 ERROR 14640 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PHOTO-SERVICE/DESKTOP-AV28T9D.mshome.net:photo-service:8082 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.1.jar:3.3.1]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.10.jar:6.1.10]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) ~[spring-boot-3.3.1.jar:3.3.1]
	at java.base/java.lang.Thread.run(Thread.java:1570) ~[na:na]

2024-07-22T13:12:27.400+03:00  INFO 14640 --- [photo-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
